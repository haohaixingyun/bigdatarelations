BEGIN HEADER
   CharacterSet "CP1252"
   ExportingTool "IBM InfoSphere DataStage Export"
   ToolVersion "8"
   ServerName "B01ACIAPPHA020"
   ToolInstanceID "DataWarehouse"
   MDISVersion "1.0"
   Date "2015-09-18"
   Time "06.13.12"
   ServerVersion "8.7"
END HEADER
BEGIN DSJOB
   Identifier "Batch::SNS_Master_Process"
   DateModified "2015-08-12"
   TimeModified "22.21.10"
   BEGIN DSRECORD
      Identifier "ROOT"
      OLEType "CJobDefn"
      Readonly "0"
      Name "Batch::SNS_Master_Process"
      NextID "49"
      Container "V0"
      JobVersion "56.0.0"
      JobControlCode =+=+=+=
* Tokens were replaced below as follows:
* IdV1S0%%UserVar%%0 <= Initialize_Param.V_HOST_NAME
* IdV1S0%%UserVar%%1 <= Initialize_Param.V_JOB_NAME
* IdV1S0%%UserVar%%2 <= Initialize_Param.V_PROJ_NAME
* IdV1S0%%UserVar%%3 <= Initialize_Param.V_DB_NAME
* IdV1S0%%UserVar%%4 <= Initialize_Param.V_SQL_FILE
* IdV0S63%%UserVar%%5 <= Init_Flag.V_RUN_RMS_TRGT_FLAG
* IdV0S63%%UserVar%%6 <= Init_Flag.V_RUN_RMS_ACTL_FLAG
* IdV0S63%%UserVar%%7 <= Init_Flag.V_SYNC_PROD_CUST_FLAG
* IdV0S63%%UserVar%%8 <= Init_Flag.V_RUN_SNS_DTL_SUM_FLAG
* IdV0S63%%UserVar%%9 <= Init_Flag.V_PUBLISH_DATE_FLAG
* IdV0S63%%UserVar%%10 <= Init_Flag.V_INTERMEDIATE_WEEK_FLAG
* IdV0S63%%UserVar%%11 <= Init_Flag.V_RUN_VRR_EXPIRED_FLAG
* IdV0S63%%UserVar%%12 <= Init_Flag.V_RUN_VRR_RENEWED_FLAG
* IdV0S63%%UserVar%%13 <= Init_Flag.V_RUN_VRR_ASP_FLAG
* IdV0S63%%UserVar%%14 <= Init_Flag.V_RUN_TM1_FLAG
* IdV26S0%%UserVar%%15 <= Param.WK_ID
* IdV0S22%%Result2%%16 <= Batch_RMS_Process.$UserStatus
* IdV0S22%%Result1%%17 <= Batch_RMS_Process.$JobStatus
* IdV0S22%%Name%%18 <= Batch_RMS_Process.$JobName
* IdV0S29%%Result2%%19 <= Batch_SNS_PROCESS.$UserStatus
* IdV0S29%%Result1%%20 <= Batch_SNS_PROCESS.$JobStatus
* IdV0S29%%Name%%21 <= Batch_SNS_PROCESS.$JobName
* IdV0S33%%Result2%%22 <= Batch_Sync_Prod_dimnsn.$UserStatus
* IdV0S33%%Result1%%23 <= Batch_Sync_Prod_dimnsn.$JobStatus
* IdV0S33%%Name%%24 <= Batch_Sync_Prod_dimnsn.$JobName
* IdV0S81%%Result2%%25 <= Gen_Run_Flag_hash.$UserStatus
* IdV0S81%%Result1%%26 <= Gen_Run_Flag_hash.$JobStatus
* IdV0S81%%Name%%27 <= Gen_Run_Flag_hash.$JobName
* IdV0S96%%Result2%%28 <= Batch_Wait_For_TM1_Cube.$UserStatus
* IdV0S96%%Result1%%29 <= Batch_Wait_For_TM1_Cube.$JobStatus
* IdV0S96%%Name%%30 <= Batch_Wait_For_TM1_Cube.$JobName
* IdV0S98%%Result2%%31 <= Lock_SNS_Status.$UserStatus
* IdV0S98%%Result1%%32 <= Lock_SNS_Status.$JobStatus
* IdV0S98%%Name%%33 <= Lock_SNS_Status.$JobName
* IdV0S100%%Result2%%34 <= UnLock_SNS_Status.$UserStatus
* IdV0S100%%Result1%%35 <= UnLock_SNS_Status.$JobStatus
* IdV0S100%%Name%%36 <= UnLock_SNS_Status.$JobName
* IdV26S2%%Result2%%37 <= GenFiscalDate2WeekID.$UserStatus
* IdV26S2%%Result1%%38 <= GenFiscalDate2WeekID.$JobStatus
* IdV26S2%%Name%%39 <= GenFiscalDate2WeekID.$JobName
* IdV32S2%%Result2%%40 <= Batch_Publish_SNS_Data.$UserStatus
* IdV32S2%%Result1%%41 <= Batch_Publish_SNS_Data.$JobStatus
* IdV32S2%%Name%%42 <= Batch_Publish_SNS_Data.$JobName
* IdV0S139%%Result2%%43 <= Batch_Back_Del_SNS_Hist.$UserStatus
* IdV0S139%%Result1%%44 <= Batch_Back_Del_SNS_Hist.$JobStatus
* IdV0S139%%Name%%45 <= Batch_Back_Del_SNS_Hist.$JobName
* IdV0S174%%Result2%%46 <= Load_VRR_Expird_Renwd.$UserStatus
* IdV0S174%%Result1%%47 <= Load_VRR_Expird_Renwd.$JobStatus
* IdV0S174%%Name%%48 <= Load_VRR_Expird_Renwd.$JobName
* IdV0S221%%Result2%%49 <= Start_Mail.$UserStatus
* IdV0S221%%Result1%%50 <= Start_Mail.$JobStatus
* IdV0S221%%Name%%51 <= Start_Mail.$JobName
* IdV38S2%%Result2%%52 <= Batch_Wait_For_TM1_Cube_END.$UserStatus
* IdV38S2%%Result1%%53 <= Batch_Wait_For_TM1_Cube_END.$JobStatus
* IdV38S2%%Name%%54 <= Batch_Wait_For_TM1_Cube_END.$JobName
* IdV46S4%%Result2%%55 <= Populate_Token_Multi_Yr_Sns_Part.$UserStatus
* IdV46S4%%Result1%%56 <= Populate_Token_Multi_Yr_Sns_Part.$JobStatus
* IdV46S4%%Name%%57 <= Populate_Token_Multi_Yr_Sns_Part.$JobName
*
*** [Generated at 2015-08-12 22:21:08 - 8.7.0.0]
   $INCLUDE DSINCLUDE DSJ_XFUNCS.H
   Deffun UtilityHashLookup(a1,a2,a3) Calling 'DSU.UtilityHashLookup'
   EQU Time$$ Lit "Oconv(Time(), 'MTS:'):': '"
****************************************
* Graphical Sequencer generated code for Job Batch::SNS_Master_Process
****************************************
   
   seq$V0S76$count = 0
   seq$V0S76$status = 0
   seq$V0S133$count = 0
   seq$V0S133$status = 0
   seq$V0S146$count = 0
   seq$V0S146$status = 0
   seq$V0S185$count = 0
   seq$V0S185$status = 0
   seq$V38S3$count = 0
   seq$V38S3$status = 0
   handle$list = ""
   id$list = ""
   abort$list = ""
   b$Abandoning = @False
   rpt$all = ""
   summary$restarting = @False
*** Sequence start point
   summary$ = DSMakeMsg("DSTAGE_JSG_M_0048\\Summary of sequence run", "")
   If summary$restarting Then
      summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0049\\Sequence restarted after failure", ""))
   End Else
      summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0051\\Sequence started", ""))
   End
   GoTo L$V1S0$START
L$RETURN$1:
   GoTo L$WAITFORJOB
**************************************************
L$V0S22$START:
*** Activity "Batch_RMS_Process": Initialize job
   jb$V0S22 = "Batch::RMS_Process"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Batch_RMS_Process":@FM:jb$V0S22))
   h$V0S22 = DSAttachJob(jb$V0S22, DSJ.ERRNONE)
   If (Not(h$V0S22)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V0S22:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   h$V0S22 = DSPrepareJob(h$V0S22)
   If (Not(h$V0S22)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V0S22:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
L$V0S22$PREPARED:
   p$V0S22$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V0S22, "$DSS_DB_NAME", p$V0S22$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V0S22, "$DSS_DB_USERNAME", p$V0S22$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V0S22, "$DSS_DB_PASSWD", p$V0S22$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$4 = ($ODS_DB_NAME)
   err$code = DSSetParam(h$V0S22, "$ODS_DB_NAME", p$V0S22$4)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$ODS_DB_NAME":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$5 = ($ODS_DB_USERNAME)
   err$code = DSSetParam(h$V0S22, "$ODS_DB_USERNAME", p$V0S22$5)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$ODS_DB_USERNAME":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$6 = ($ODS_DB_PASSWD)
   err$code = DSSetParam(h$V0S22, "$ODS_DB_PASSWD", p$V0S22$6)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$ODS_DB_PASSWD":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$7 = ($FROM_EMAIL)
   err$code = DSSetParam(h$V0S22, "$FROM_EMAIL", p$V0S22$7)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$FROM_EMAIL":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$8 = ($TO_EMAIL)
   err$code = DSSetParam(h$V0S22, "$TO_EMAIL", p$V0S22$8)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$9 = ($SYS_CODE)
   err$code = DSSetParam(h$V0S22, "$SYS_CODE", p$V0S22$9)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$SYS_CODE":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$10 = ($APP_NAME)
   err$code = DSSetParam(h$V0S22, "$APP_NAME", p$V0S22$10)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$APP_NAME":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$11 = ($DSW_IN_DIR)
   err$code = DSSetParam(h$V0S22, "$DSW_IN_DIR", p$V0S22$11)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSW_IN_DIR":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$12 = ($DSW_SQL_DIR)
   err$code = DSSetParam(h$V0S22, "$DSW_SQL_DIR", p$V0S22$12)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSW_SQL_DIR":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$13 = (IdV0S63%%UserVar%%5)
   err$code = DSSetParam(h$V0S22, "RUN_RMS_TAGT_FLAG", p$V0S22$13)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_RMS_TAGT_FLAG":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$14 = (IdV0S63%%UserVar%%6)
   err$code = DSSetParam(h$V0S22, "RUN_RMS_ACTL_FLAG", p$V0S22$14)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_RMS_ACTL_FLAG":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$15 = ($DONE_SIGNAL_FILE_UC)
   err$code = DSSetParam(h$V0S22, "$DONE_SIGNAL_FILE_UC", p$V0S22$15)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DONE_SIGNAL_FILE_UC":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$16 = ($DONE_SIGNAL_FILE_RMS)
   err$code = DSSetParam(h$V0S22, "$DONE_SIGNAL_FILE_RMS", p$V0S22$16)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DONE_SIGNAL_FILE_RMS":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$17 = ($DB2_PRT_DIR)
   err$code = DSSetParam(h$V0S22, "$DB2_PRT_DIR", p$V0S22$17)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DB2_PRT_DIR":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$18 = (SKIP_COPY_TABLE)
   err$code = DSSetParam(h$V0S22, "SKIP_COPY_TABLE", p$V0S22$18)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "SKIP_COPY_TABLE":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$19 = (WAIT_FOR_UC_SIGNAL_FILE)
   err$code = DSSetParam(h$V0S22, "WAIT_FOR_UC_SIGNAL_FILE", p$V0S22$19)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "WAIT_FOR_UC_SIGNAL_FILE":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   p$V0S22$20 = ('N')
   err$code = DSSetParam(h$V0S22, "LOAD_TOKEN_MULTI_YR_FLAG", p$V0S22$20)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "LOAD_TOKEN_MULTI_YR_FLAG":@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V0S22, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V0S22:@FM:err$code)
      msg$id = "@Batch_RMS_Process"; GoTo L$ERROR
   End
   handle$list<-1> = h$V0S22
   id$list<-1> = "V0S22"
   GoTo L$V46S4$RETURN$3
**************************************************
L$V0S22$FINISHED:
   job$V0S22$status = DSGetJobInfo(h$V0S22, DSJ.JOBSTATUS)
   job$V0S22$userstatus = DSGetJobInfo(h$V0S22, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Batch_RMS_Process":@FM:jb$V0S22:@FM:job$V0S22$status))
   IdV0S22%%Result2%%16 = job$V0S22$userstatus
   IdV0S22%%Result1%%17 = job$V0S22$status
   IdV0S22%%Name%%18 = jb$V0S22
   If (job$V0S22$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V0S22:@FM:DSTranslateCode(job$V0S22$status)), "@Batch_RMS_Process")
   End
   rpt$V0S22 = DSMakeJobReport(h$V0S22, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V0S22:@FM:rpt$V0S22), "@Batch_RMS_Process")
   rpt$all := "\\n":rpt$V0S22 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V0S22)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (job$V0S22$status = DSJS.RUNOK) Then GoSub L$V0S185$START
   If (IdV0S22%%Result1%%17 <>"1") Then GoTo L$V0S31$START
L$V0S22$RETURN$2:
   GoTo L$WAITFORJOB
**************************************************
L$V0S29$START:
*** Activity "Batch_SNS_PROCESS": Initialize job
   jb$V0S29 = "Batch::SNS_Process"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Batch_SNS_PROCESS":@FM:jb$V0S29))
   h$V0S29 = DSAttachJob(jb$V0S29, DSJ.ERRNONE)
   If (Not(h$V0S29)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V0S29:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   h$V0S29 = DSPrepareJob(h$V0S29)
   If (Not(h$V0S29)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V0S29:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
L$V0S29$PREPARED:
   p$V0S29$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V0S29, "$DSS_DB_NAME", p$V0S29$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V0S29, "$DSS_DB_USERNAME", p$V0S29$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V0S29, "$DSS_DB_PASSWD", p$V0S29$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$4 = ($ODS_DB_NAME)
   err$code = DSSetParam(h$V0S29, "$ODS_DB_NAME", p$V0S29$4)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$ODS_DB_NAME":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$5 = ($ODS_DB_USERNAME)
   err$code = DSSetParam(h$V0S29, "$ODS_DB_USERNAME", p$V0S29$5)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$ODS_DB_USERNAME":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$6 = ($ODS_DB_PASSWD)
   err$code = DSSetParam(h$V0S29, "$ODS_DB_PASSWD", p$V0S29$6)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$ODS_DB_PASSWD":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$7 = (DIMNSN_LIST)
   err$code = DSSetParam(h$V0S29, "DIMNSN_LIST", p$V0S29$7)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "DIMNSN_LIST":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$8 = ($FROM_EMAIL)
   err$code = DSSetParam(h$V0S29, "$FROM_EMAIL", p$V0S29$8)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$FROM_EMAIL":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$9 = ($TO_EMAIL)
   err$code = DSSetParam(h$V0S29, "$TO_EMAIL", p$V0S29$9)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$10 = ($SYS_CODE)
   err$code = DSSetParam(h$V0S29, "$SYS_CODE", p$V0S29$10)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$SYS_CODE":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$11 = ($APP_NAME)
   err$code = DSSetParam(h$V0S29, "$APP_NAME", p$V0S29$11)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$APP_NAME":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$12 = (SNAPSHOT_WK_DIMNSN_ID)
   err$code = DSSetParam(h$V0S29, "SNAPSHOT_WK_DIMNSN_ID", p$V0S29$12)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "SNAPSHOT_WK_DIMNSN_ID":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$13 = (WAIT_CUST_PROD_SIGNAL_FILE)
   err$code = DSSetParam(h$V0S29, "WAIT_CUST_PROD_SIGNAL_FILE", p$V0S29$13)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "WAIT_CUST_PROD_SIGNAL_FILE":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$14 = ($HRCL_NAME)
   err$code = DSSetParam(h$V0S29, "$HRCL_NAME", p$V0S29$14)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$HRCL_NAME":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$15 = ($DSW_SQL_DIR)
   err$code = DSSetParam(h$V0S29, "$DSW_SQL_DIR", p$V0S29$15)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSW_SQL_DIR":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$16 = ($DSW_IN_DIR)
   err$code = DSSetParam(h$V0S29, "$DSW_IN_DIR", p$V0S29$16)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSW_IN_DIR":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$17 = ($DONE_SIGNAL_FILE_CUST)
   err$code = DSSetParam(h$V0S29, "$DONE_SIGNAL_FILE_CUST", p$V0S29$17)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DONE_SIGNAL_FILE_CUST":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$18 = ($DONE_SIGNAL_FILE_PROD)
   err$code = DSSetParam(h$V0S29, "$DONE_SIGNAL_FILE_PROD", p$V0S29$18)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DONE_SIGNAL_FILE_PROD":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   p$V0S29$19 = (SNS_SQL_File)
   err$code = DSSetParam(h$V0S29, "SNS_VALIDATE_SQL_FILE", p$V0S29$19)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "SNS_VALIDATE_SQL_FILE":@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V0S29, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V0S29:@FM:err$code)
      msg$id = "@Batch_SNS_PROCESS"; GoTo L$ERROR
   End
   handle$list<-1> = h$V0S29
   id$list<-1> = "V0S29"
   GoTo L$V0S72$RETURN$2
**************************************************
L$V0S29$FINISHED:
   job$V0S29$status = DSGetJobInfo(h$V0S29, DSJ.JOBSTATUS)
   job$V0S29$userstatus = DSGetJobInfo(h$V0S29, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Batch_SNS_PROCESS":@FM:jb$V0S29:@FM:job$V0S29$status))
   IdV0S29%%Result2%%19 = job$V0S29$userstatus
   IdV0S29%%Result1%%20 = job$V0S29$status
   IdV0S29%%Name%%21 = jb$V0S29
   If (job$V0S29$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V0S29:@FM:DSTranslateCode(job$V0S29$status)), "@Batch_SNS_PROCESS")
   End
   rpt$V0S29 = DSMakeJobReport(h$V0S29, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V0S29:@FM:rpt$V0S29), "@Batch_SNS_PROCESS")
   rpt$all := "\\n":rpt$V0S29 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V0S29)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (job$V0S29$status = DSJS.RUNOK) Then GoTo L$V0S213$START
L$V0S29$RETURN$1:
   If (IdV0S29%%Result1%%20 <>"1") Then GoTo L$V0S37$START
L$V0S29$RETURN$2:
   GoTo L$WAITFORJOB
**************************************************
L$V0S31$START:
*** Activity "RMS_failure": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "RMS_failure":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@RMS_failure"; GoTo L$ERROR
   End
   p$V0S31$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV0S22%%Name%%18:" failed with status code = ":IdV0S22%%Result1%%17:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V0S31, p$V0S31$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "RMS_failure":@FM:r$V0S31))
   If r$V0S31 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V0S31), "@RMS_failure")
   End
   GoTo L$V0S22$RETURN$2
**************************************************
L$V0S33$START:
*** Activity "Batch_Sync_Prod_dimnsn": Initialize job
   jb$V0S33 = "Batch::Sync_Prod_Cust_Dimnsn"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Batch_Sync_Prod_dimnsn":@FM:jb$V0S33))
   h$V0S33 = DSAttachJob(jb$V0S33, DSJ.ERRNONE)
   If (Not(h$V0S33)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V0S33:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   h$V0S33 = DSPrepareJob(h$V0S33)
   If (Not(h$V0S33)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V0S33:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
L$V0S33$PREPARED:
   p$V0S33$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V0S33, "$DSS_DB_NAME", p$V0S33$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V0S33, "$DSS_DB_USERNAME", p$V0S33$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V0S33, "$DSS_DB_PASSWD", p$V0S33$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$4 = ($ODS_DB_NAME)
   err$code = DSSetParam(h$V0S33, "$ODS_DB_NAME", p$V0S33$4)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$ODS_DB_NAME":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$5 = ($ODS_DB_USERNAME)
   err$code = DSSetParam(h$V0S33, "$ODS_DB_USERNAME", p$V0S33$5)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$ODS_DB_USERNAME":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$6 = ($ODS_DB_PASSWD)
   err$code = DSSetParam(h$V0S33, "$ODS_DB_PASSWD", p$V0S33$6)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$ODS_DB_PASSWD":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$7 = (SNS_SQL_File)
   err$code = DSSetParam(h$V0S33, "SNS_VALIDATE_SQL_FILE", p$V0S33$7)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "SNS_VALIDATE_SQL_FILE":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$8 = ($FROM_EMAIL)
   err$code = DSSetParam(h$V0S33, "$FROM_EMAIL", p$V0S33$8)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$FROM_EMAIL":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$9 = ($TO_EMAIL)
   err$code = DSSetParam(h$V0S33, "$TO_EMAIL", p$V0S33$9)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$10 = ($APP_NAME)
   err$code = DSSetParam(h$V0S33, "$APP_NAME", p$V0S33$10)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$APP_NAME":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$11 = ($SYS_CODE)
   err$code = DSSetParam(h$V0S33, "$SYS_CODE", p$V0S33$11)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$SYS_CODE":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$12 = ($HRCL_NAME)
   err$code = DSSetParam(h$V0S33, "$HRCL_NAME", p$V0S33$12)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$HRCL_NAME":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$13 = (WAIT_CUST_PROD_SIGNAL_FILE)
   err$code = DSSetParam(h$V0S33, "WAIT_CUST_PROD_SIGNAL_FILE", p$V0S33$13)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "WAIT_CUST_PROD_SIGNAL_FILE":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$14 = ($DONE_SIGNAL_FILE_CUST)
   err$code = DSSetParam(h$V0S33, "$DONE_SIGNAL_FILE_CUST", p$V0S33$14)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DONE_SIGNAL_FILE_CUST":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$15 = ($DONE_SIGNAL_FILE_PROD)
   err$code = DSSetParam(h$V0S33, "$DONE_SIGNAL_FILE_PROD", p$V0S33$15)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DONE_SIGNAL_FILE_PROD":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$16 = ($COGNOS_ACCOUNT_NAME)
   err$code = DSSetParam(h$V0S33, "$COGNOS_ACCOUNT_NAME", p$V0S33$16)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$COGNOS_ACCOUNT_NAME":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$17 = ($COGNOS_SERVER_NAME_SS)
   err$code = DSSetParam(h$V0S33, "$COGNOS_SERVER_NAME_SS", p$V0S33$17)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$COGNOS_SERVER_NAME_SS":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$18 = ($DSW_IN_DIR)
   err$code = DSSetParam(h$V0S33, "$DSW_IN_DIR", p$V0S33$18)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSW_IN_DIR":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$19 = ($DSW_SQL_DIR)
   err$code = DSSetParam(h$V0S33, "$DSW_SQL_DIR", p$V0S33$19)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSW_SQL_DIR":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$20 = (SNAPSHOT_WK_DIMNSN_ID)
   err$code = DSSetParam(h$V0S33, "SNAPSHOT_WK_DIMNSN_ID", p$V0S33$20)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "SNAPSHOT_WK_DIMNSN_ID":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$21 = (SKIP_BUILD_CUBE)
   err$code = DSSetParam(h$V0S33, "SKIP_BUILD_CUBE", p$V0S33$21)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "SKIP_BUILD_CUBE":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   p$V0S33$22 = (SKIP_COPY_TABLE)
   err$code = DSSetParam(h$V0S33, "SKIP_COPY_TABLE", p$V0S33$22)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "SKIP_COPY_TABLE":@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V0S33, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V0S33:@FM:err$code)
      msg$id = "@Batch_Sync_Prod_dimnsn"; GoTo L$ERROR
   End
   handle$list<-1> = h$V0S33
   id$list<-1> = "V0S33"
   GoTo L$V0S71$RETURN$1
**************************************************
L$V0S33$FINISHED:
   job$V0S33$status = DSGetJobInfo(h$V0S33, DSJ.JOBSTATUS)
   job$V0S33$userstatus = DSGetJobInfo(h$V0S33, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Batch_Sync_Prod_dimnsn":@FM:jb$V0S33:@FM:job$V0S33$status))
   IdV0S33%%Result2%%22 = job$V0S33$userstatus
   IdV0S33%%Result1%%23 = job$V0S33$status
   IdV0S33%%Name%%24 = jb$V0S33
   If (job$V0S33$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V0S33:@FM:DSTranslateCode(job$V0S33$status)), "@Batch_Sync_Prod_dimnsn")
   End
   rpt$V0S33 = DSMakeJobReport(h$V0S33, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V0S33:@FM:rpt$V0S33), "@Batch_Sync_Prod_dimnsn")
   rpt$all := "\\n":rpt$V0S33 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V0S33)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (job$V0S33$status = DSJS.RUNOK) Then GoSub L$V0S76$START
   If (IdV0S33%%Result1%%23 <>"1") Then GoTo L$V0S38$START
L$V0S33$RETURN$2:
   GoTo L$WAITFORJOB
**************************************************
L$V0S37$START:
*** Activity "Batch_SNS_PROCESS_failure": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "Batch_SNS_PROCESS_failure":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@Batch_SNS_PROCESS_failure"; GoTo L$ERROR
   End
   p$V0S37$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV0S29%%Name%%21:" failed with status code = ":IdV0S29%%Result1%%20:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V0S37, p$V0S37$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "Batch_SNS_PROCESS_failure":@FM:r$V0S37))
   If r$V0S37 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V0S37), "@Batch_SNS_PROCESS_failure")
   End
   GoTo L$V0S29$RETURN$2
**************************************************
L$V0S38$START:
*** Activity "Batch_Sync_Prod_dimnsn_failure": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "Batch_Sync_Prod_dimnsn_failure":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@Batch_Sync_Prod_dimnsn_failure"; GoTo L$ERROR
   End
   p$V0S38$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV0S33%%Name%%24:" failed with status code = ":IdV0S33%%Result1%%23:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V0S38, p$V0S38$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "Batch_Sync_Prod_dimnsn_failure":@FM:r$V0S38))
   If r$V0S38 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V0S38), "@Batch_Sync_Prod_dimnsn_failure")
   End
   GoTo L$V0S33$RETURN$2
**************************************************
L$V1S0$START:
*** Set user variables: "Initialize_Param"
   IdV1S0%%UserVar%%0 = (DSHostName)
   IdV1S0%%UserVar%%1 = (DSJobName)
   IdV1S0%%UserVar%%2 = (DSProjectName)
   IdV1S0%%UserVar%%3 = ($DSS_DB_NAME)
   IdV1S0%%UserVar%%4 = ("ytd_validation.sqls")
   GoTo L$V0S81$START
L$V1S0$RETURN$1:
   GoTo L$RETURN$1
**************************************************
L$V0S63$START:
*** Set user variables: "Init_Flag"
   IdV0S63%%UserVar%%5 = (if RUN_RMS_TRGT_FLAG = 'DEFAULT' then UtilityHashLookup(('sns_run_flag_hash'), ('RUN_RMS_TRGT_FLAG'), (1)) else RUN_RMS_TRGT_FLAG)
   IdV0S63%%UserVar%%6 = (if RUN_RMS_ACTL_FLAG = 'DEFAULT' then UtilityHashLookup(('sns_run_flag_hash'), ('RUN_RMS_ACTL_FLAG'), (1)) else RUN_RMS_ACTL_FLAG)
   IdV0S63%%UserVar%%7 = (if SYNC_PROD_CUST_FLAG = 'DEFAULT' then UtilityHashLookup(('sns_run_flag_hash'), ('SYN_PRD_CUST_FLAG'), (1)) else SYNC_PROD_CUST_FLAG)
   IdV0S63%%UserVar%%8 = (if RUN_SNS_DTL_SUM_FLAG = 'DEFAULT' then UtilityHashLookup(('sns_run_flag_hash'), ('RUN_SNS_DTL_SUM_FLAG'), (1)) else RUN_SNS_DTL_SUM_FLAG)
   IdV0S63%%UserVar%%9 = (if PUBLISH_DATE_FLAG = 'DEFAULT' then UtilityHashLookup(('sns_run_flag_hash'), ('PUBLISH_DATE_FLAG'), (1)) else PUBLISH_DATE_FLAG)
   IdV0S63%%UserVar%%10 = (if ARCHIVE_INTERMEDIATE_WEEK_FLAG = 'DEFAULT' then UtilityHashLookup(('sns_run_flag_hash'), ('ARCHIVE_INTERMEDIATE_WEEK_FLAG'), (1)) else ARCHIVE_INTERMEDIATE_WEEK_FLAG)
   IdV0S63%%UserVar%%11 = (if RUN_VRR_EXPIRED_FLAG = 'DEFAULT' then UtilityHashLookup(('sns_run_flag_hash'), ('RUN_VRR_EXPIRED_FLAG'), (1)) else RUN_VRR_EXPIRED_FLAG)
   IdV0S63%%UserVar%%12 = (if RUN_VRR_RENEWED_FLAG = 'DEFAULT' then UtilityHashLookup(('sns_run_flag_hash'), ('RUN_VRR_RENEWED_FLAG'), (1)) else RUN_VRR_RENEWED_FLAG)
   IdV0S63%%UserVar%%13 = (if RUN_VRR_ASP_FLAG = 'DEFAULT' then UtilityHashLookup(('sns_run_flag_hash'), ('RUN_VRR_ASP_FLAG'), (1)) else RUN_VRR_ASP_FLAG)
   IdV0S63%%UserVar%%14 = (if RUN_TM1_FLAG = 'DEFAULT' then UtilityHashLookup(('sns_run_flag_hash'), ('RUN_TM1_FLAG'), (1)) else RUN_TM1_FLAG)
   GoTo L$V0S221$START
L$V0S63$RETURN$1:
   GoTo L$V0S81$RETURN$2
**************************************************
L$V0S71$START:
*** Decision "IF_SYSNC_CUST_PROD"
   If (IdV0S63%%UserVar%%7='Y') Then GoTo L$V0S33$START
L$V0S71$RETURN$1:
   If (IdV0S63%%UserVar%%7='N') Then GoTo L$V0S72$START
L$V0S71$RETURN$2:
   GoTo L$V0S146$RETURN$1
**************************************************
L$V0S72$START:
*** Decision "IF_RUN_SNS_PROCESS"
   If (IdV0S63%%UserVar%%8='N') Then GoSub L$V0S76$START
   If (IdV0S63%%UserVar%%8='Y') Then GoTo L$V0S29$START
L$V0S72$RETURN$2:
   GoTo L$V0S71$RETURN$2
**************************************************
L$V0S76$START:
*** Sequencer "all_done": wait until inputs ready
   seq$V0S76$status = 1
   If seq$V0S76$count > 0 Then Return
   seq$V0S76$count += 1
   seq$V0S76$status = 2
   GoTo L$V26S2$START
L$V0S76$RETURN$1:
   Return
**************************************************
L$V22S0$START:
*** Activity "Batch_successful": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "Batch_successful":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@Batch_successful"; GoTo L$ERROR
   End
   p$V22S0$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"S":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV1S0%%UserVar%%1:" completed successfully\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V22S0, p$V22S0$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "Batch_successful":@FM:r$V22S0))
   If r$V22S0 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V22S0), "@Batch_successful")
   End
   GoTo L$V38S3$RETURN$1
**************************************************
L$V0S81$START:
*** Activity "Gen_Run_Flag_hash": Initialize job
   jb$V0S81 = "Gen_Run_Flag_hash"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Gen_Run_Flag_hash":@FM:jb$V0S81))
   h$V0S81 = DSAttachJob(jb$V0S81, DSJ.ERRNONE)
   If (Not(h$V0S81)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V0S81:@FM:DSGetLastErrorMsg())
      msg$id = "@Gen_Run_Flag_hash"; GoTo L$ERROR
   End
   h$V0S81 = DSPrepareJob(h$V0S81)
   If (Not(h$V0S81)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V0S81:@FM:DSGetLastErrorMsg())
      msg$id = "@Gen_Run_Flag_hash"; GoTo L$ERROR
   End
L$V0S81$PREPARED:
   p$V0S81$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V0S81, "$DSS_DB_NAME", p$V0S81$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Gen_Run_Flag_hash"; GoTo L$ERROR
   End
   p$V0S81$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V0S81, "$DSS_DB_USERNAME", p$V0S81$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Gen_Run_Flag_hash"; GoTo L$ERROR
   End
   p$V0S81$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V0S81, "$DSS_DB_PASSWD", p$V0S81$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Gen_Run_Flag_hash"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V0S81, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V0S81:@FM:err$code)
      msg$id = "@Gen_Run_Flag_hash"; GoTo L$ERROR
   End
   handle$list<-1> = h$V0S81
   id$list<-1> = "V0S81"
   GoTo L$V1S0$RETURN$1
**************************************************
L$V0S81$FINISHED:
   job$V0S81$status = DSGetJobInfo(h$V0S81, DSJ.JOBSTATUS)
   job$V0S81$userstatus = DSGetJobInfo(h$V0S81, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Gen_Run_Flag_hash":@FM:jb$V0S81:@FM:job$V0S81$status))
   IdV0S81%%Result2%%25 = job$V0S81$userstatus
   IdV0S81%%Result1%%26 = job$V0S81$status
   IdV0S81%%Name%%27 = jb$V0S81
   If (job$V0S81$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V0S81:@FM:DSTranslateCode(job$V0S81$status)), "@Gen_Run_Flag_hash")
   End
   rpt$V0S81 = DSMakeJobReport(h$V0S81, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V0S81:@FM:rpt$V0S81), "@Gen_Run_Flag_hash")
   rpt$all := "\\n":rpt$V0S81 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V0S81)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (IdV0S81%%Result1%%26 <>"1") Then GoTo L$V23S0$START
L$V0S81$RETURN$1:
   If (job$V0S81$status = DSJS.RUNOK) Then GoTo L$V0S63$START
L$V0S81$RETURN$2:
   GoTo L$WAITFORJOB
**************************************************
L$V23S0$START:
*** Activity "notify_Gen_Run_Flag_hash_failure": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "notify_Gen_Run_Flag_hash_failure":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@notify_Gen_Run_Flag_hash_failure"; GoTo L$ERROR
   End
   p$V23S0$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV0S81%%Name%%27:" failed with status code = ":IdV0S81%%Result1%%26:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V23S0, p$V23S0$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "notify_Gen_Run_Flag_hash_failure":@FM:r$V23S0))
   If r$V23S0 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V23S0), "@notify_Gen_Run_Flag_hash_failure")
   End
   GoTo L$V0S81$RETURN$1
**************************************************
L$V0S96$START:
*** Activity "Batch_Wait_For_TM1_Cube": Initialize job
   jb$V0S96 = "Batch::Wait_For_TM1_Cube"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Batch_Wait_For_TM1_Cube":@FM:jb$V0S96))
   h$V0S96 = DSAttachJob(jb$V0S96, DSJ.ERRNONE)
   If (Not(h$V0S96)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V0S96:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   h$V0S96 = DSPrepareJob(h$V0S96)
   If (Not(h$V0S96)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V0S96:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
L$V0S96$PREPARED:
   p$V0S96$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V0S96, "$DSS_DB_NAME", p$V0S96$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   p$V0S96$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V0S96, "$DSS_DB_USERNAME", p$V0S96$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   p$V0S96$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V0S96, "$DSS_DB_PASSWD", p$V0S96$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   p$V0S96$4 = ($SYS_CODE)
   err$code = DSSetParam(h$V0S96, "$SYS_CODE", p$V0S96$4)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$SYS_CODE":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   p$V0S96$5 = ($APP_NAME)
   err$code = DSSetParam(h$V0S96, "$APP_NAME", p$V0S96$5)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$APP_NAME":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   p$V0S96$6 = ($TO_EMAIL)
   err$code = DSSetParam(h$V0S96, "$TO_EMAIL", p$V0S96$6)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   p$V0S96$7 = ($FROM_EMAIL)
   err$code = DSSetParam(h$V0S96, "$FROM_EMAIL", p$V0S96$7)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$FROM_EMAIL":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   p$V0S96$8 = ($TO_EMAIL_SNS_CUSTOMER)
   err$code = DSSetParam(h$V0S96, "$TO_EMAIL_SNS_CUSTOMER", p$V0S96$8)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL_SNS_CUSTOMER":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   p$V0S96$9 = ($DSW_IN_DIR)
   err$code = DSSetParam(h$V0S96, "$DSW_IN_DIR", p$V0S96$9)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSW_IN_DIR":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   p$V0S96$10 = (NOTIFY_CUSTOMER_FLAG)
   err$code = DSSetParam(h$V0S96, "NOTIFY_CUSTOMER_FLAG", p$V0S96$10)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "NOTIFY_CUSTOMER_FLAG":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V0S96, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V0S96:@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube"; GoTo L$ERROR
   End
   handle$list<-1> = h$V0S96
   id$list<-1> = "V0S96"
   GoTo L$V0S213$RETURN$2
**************************************************
L$V0S96$FINISHED:
   job$V0S96$status = DSGetJobInfo(h$V0S96, DSJ.JOBSTATUS)
   job$V0S96$userstatus = DSGetJobInfo(h$V0S96, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Batch_Wait_For_TM1_Cube":@FM:jb$V0S96:@FM:job$V0S96$status))
   IdV0S96%%Result2%%28 = job$V0S96$userstatus
   IdV0S96%%Result1%%29 = job$V0S96$status
   IdV0S96%%Name%%30 = jb$V0S96
   If (job$V0S96$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V0S96:@FM:DSTranslateCode(job$V0S96$status)), "@Batch_Wait_For_TM1_Cube")
   End
   rpt$V0S96 = DSMakeJobReport(h$V0S96, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V0S96:@FM:rpt$V0S96), "@Batch_Wait_For_TM1_Cube")
   rpt$all := "\\n":rpt$V0S96 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V0S96)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (IdV0S96%%Result1%%29 <>"1") Then GoTo L$V28S0$START
L$V0S96$RETURN$1:
   If (job$V0S96$status = DSJS.RUNOK) Then GoSub L$V0S76$START
   GoTo L$WAITFORJOB
**************************************************
L$V0S98$START:
*** Activity "Lock_SNS_Status": Initialize job
   jb$V0S98 = "Lock_SNS_Status"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Lock_SNS_Status":@FM:jb$V0S98))
   h$V0S98 = DSAttachJob(jb$V0S98, DSJ.ERRNONE)
   If (Not(h$V0S98)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V0S98:@FM:DSGetLastErrorMsg())
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   h$V0S98 = DSPrepareJob(h$V0S98)
   If (Not(h$V0S98)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V0S98:@FM:DSGetLastErrorMsg())
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
L$V0S98$PREPARED:
   p$V0S98$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V0S98, "$DSS_DB_NAME", p$V0S98$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S98$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V0S98, "$DSS_DB_USERNAME", p$V0S98$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S98$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V0S98, "$DSS_DB_PASSWD", p$V0S98$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S98$4 = "POPULATE"
   err$code = DSSetParam(h$V0S98, "ACTION", p$V0S98$4)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "ACTION":@FM:err$code)
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S98$5 = (IF COMMENT <> 'DEFAULT' THEN COMMENT ELSE "Run " : ( IF IdV0S63%%UserVar%%5 = "Y" THEN "RMS Target;" ELSE "") : ( IF IdV0S63%%UserVar%%6 = "Y" THEN "RMS Actual;" ELSE "") : ( IF IdV0S63%%UserVar%%8 = "Y" THEN "SNS Sum/Dtl;" ELSE "") : ( IF IdV0S63%%UserVar%%7 = "Y" THEN "Sync Prod and Cust Dimension;" ELSE "") : ( IF IdV0S63%%UserVar%%10 = "Y" THEN "Remove intermediate week data;" ELSE "") : ( IF IdV0S63%%UserVar%%11 = "Y" THEN "VRR Expired;" ELSE "") : ( IF IdV0S63%%UserVar%%12 = "Y" THEN "VRR Renewed;" ELSE "") : ( IF IdV0S63%%UserVar%%13 = "Y" THEN "VRR ASP;" ELSE ""))
   err$code = DSSetParam(h$V0S98, "COMMENT", p$V0S98$5)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "COMMENT":@FM:err$code)
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S98$6 = ($FROM_EMAIL)
   err$code = DSSetParam(h$V0S98, "$FROM_EMAIL", p$V0S98$6)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$FROM_EMAIL":@FM:err$code)
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S98$7 = ($TO_EMAIL)
   err$code = DSSetParam(h$V0S98, "$TO_EMAIL", p$V0S98$7)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL":@FM:err$code)
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S98$8 = ($SYS_CODE)
   err$code = DSSetParam(h$V0S98, "$SYS_CODE", p$V0S98$8)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$SYS_CODE":@FM:err$code)
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S98$9 = ($APP_NAME)
   err$code = DSSetParam(h$V0S98, "$APP_NAME", p$V0S98$9)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$APP_NAME":@FM:err$code)
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S98$10 = (IGNORE_STATUS)
   err$code = DSSetParam(h$V0S98, "IGNORE_STATUS", p$V0S98$10)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "IGNORE_STATUS":@FM:err$code)
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V0S98, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V0S98:@FM:err$code)
      msg$id = "@Lock_SNS_Status"; GoTo L$ERROR
   End
   handle$list<-1> = h$V0S98
   id$list<-1> = "V0S98"
   GoTo L$V0S221$RETURN$2
**************************************************
L$V0S98$FINISHED:
   job$V0S98$status = DSGetJobInfo(h$V0S98, DSJ.JOBSTATUS)
   job$V0S98$userstatus = DSGetJobInfo(h$V0S98, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Lock_SNS_Status":@FM:jb$V0S98:@FM:job$V0S98$status))
   IdV0S98%%Result2%%31 = job$V0S98$userstatus
   IdV0S98%%Result1%%32 = job$V0S98$status
   IdV0S98%%Name%%33 = jb$V0S98
   If (job$V0S98$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V0S98:@FM:DSTranslateCode(job$V0S98$status)), "@Lock_SNS_Status")
   End
   rpt$V0S98 = DSMakeJobReport(h$V0S98, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V0S98:@FM:rpt$V0S98), "@Lock_SNS_Status")
   rpt$all := "\\n":rpt$V0S98 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V0S98)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (job$V0S98$status = DSJS.RUNOK) Then GoTo L$V46S4$START
L$V0S98$RETURN$1:
   GoTo L$WAITFORJOB
**************************************************
L$V0S100$START:
*** Activity "UnLock_SNS_Status": Initialize job
   jb$V0S100 = "UnLock_SNS_Status"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "UnLock_SNS_Status":@FM:jb$V0S100))
   h$V0S100 = DSAttachJob(jb$V0S100, DSJ.ERRNONE)
   If (Not(h$V0S100)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V0S100:@FM:DSGetLastErrorMsg())
      msg$id = "@UnLock_SNS_Status"; GoTo L$ERROR
   End
   h$V0S100 = DSPrepareJob(h$V0S100)
   If (Not(h$V0S100)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V0S100:@FM:DSGetLastErrorMsg())
      msg$id = "@UnLock_SNS_Status"; GoTo L$ERROR
   End
L$V0S100$PREPARED:
   p$V0S100$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V0S100, "$DSS_DB_NAME", p$V0S100$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@UnLock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S100$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V0S100, "$DSS_DB_USERNAME", p$V0S100$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@UnLock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S100$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V0S100, "$DSS_DB_PASSWD", p$V0S100$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@UnLock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S100$4 = (IdV26S0%%UserVar%%15)
   err$code = DSSetParam(h$V0S100, "SNAPSHOT_DIMNSN_ID", p$V0S100$4)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "SNAPSHOT_DIMNSN_ID":@FM:err$code)
      msg$id = "@UnLock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S100$5 = ($FROM_EMAIL)
   err$code = DSSetParam(h$V0S100, "$FROM_EMAIL", p$V0S100$5)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$FROM_EMAIL":@FM:err$code)
      msg$id = "@UnLock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S100$6 = ($TO_EMAIL)
   err$code = DSSetParam(h$V0S100, "$TO_EMAIL", p$V0S100$6)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL":@FM:err$code)
      msg$id = "@UnLock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S100$7 = ($SYS_CODE)
   err$code = DSSetParam(h$V0S100, "$SYS_CODE", p$V0S100$7)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$SYS_CODE":@FM:err$code)
      msg$id = "@UnLock_SNS_Status"; GoTo L$ERROR
   End
   p$V0S100$8 = ($APP_NAME)
   err$code = DSSetParam(h$V0S100, "$APP_NAME", p$V0S100$8)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$APP_NAME":@FM:err$code)
      msg$id = "@UnLock_SNS_Status"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V0S100, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V0S100:@FM:err$code)
      msg$id = "@UnLock_SNS_Status"; GoTo L$ERROR
   End
   handle$list<-1> = h$V0S100
   id$list<-1> = "V0S100"
   GoTo L$V26S0$RETURN$1
**************************************************
L$V0S100$FINISHED:
   job$V0S100$status = DSGetJobInfo(h$V0S100, DSJ.JOBSTATUS)
   job$V0S100$userstatus = DSGetJobInfo(h$V0S100, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "UnLock_SNS_Status":@FM:jb$V0S100:@FM:job$V0S100$status))
   IdV0S100%%Result2%%34 = job$V0S100$userstatus
   IdV0S100%%Result1%%35 = job$V0S100$status
   IdV0S100%%Name%%36 = jb$V0S100
   If (job$V0S100$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V0S100:@FM:DSTranslateCode(job$V0S100$status)), "@UnLock_SNS_Status")
   End
   rpt$V0S100 = DSMakeJobReport(h$V0S100, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V0S100:@FM:rpt$V0S100), "@UnLock_SNS_Status")
   rpt$all := "\\n":rpt$V0S100 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V0S100)
   If b$Abandoning Then GoTo L$WAITFORJOB
   GoTo L$V0S131$START
L$V0S100$RETURN$1:
   GoTo L$WAITFORJOB
**************************************************
L$V26S0$START:
*** Set user variables: "Param"
   IdV26S0%%UserVar%%15 = (if SNAPSHOT_WK_DIMNSN_ID = 'DEFAULT' then UtilityHashLookup(('hash_fiscal_weekid_from_table'), ('key'), (1)) else SNAPSHOT_WK_DIMNSN_ID)
   GoTo L$V0S100$START
L$V26S0$RETURN$1:
   GoTo L$V26S2$RETURN$2
**************************************************
L$V26S2$START:
*** Activity "GenFiscalDate2WeekID": Initialize job
   jb$V26S2 = "Gen_Fiscal_Week_ID_From_Week_Table"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "GenFiscalDate2WeekID":@FM:jb$V26S2))
   h$V26S2 = DSAttachJob(jb$V26S2, DSJ.ERRNONE)
   If (Not(h$V26S2)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V26S2:@FM:DSGetLastErrorMsg())
      msg$id = "@GenFiscalDate2WeekID"; GoTo L$ERROR
   End
   h$V26S2 = DSPrepareJob(h$V26S2)
   If (Not(h$V26S2)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V26S2:@FM:DSGetLastErrorMsg())
      msg$id = "@GenFiscalDate2WeekID"; GoTo L$ERROR
   End
L$V26S2$PREPARED:
   p$V26S2$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V26S2, "$DSS_DB_NAME", p$V26S2$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@GenFiscalDate2WeekID"; GoTo L$ERROR
   End
   p$V26S2$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V26S2, "$DSS_DB_USERNAME", p$V26S2$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@GenFiscalDate2WeekID"; GoTo L$ERROR
   End
   p$V26S2$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V26S2, "$DSS_DB_PASSWD", p$V26S2$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@GenFiscalDate2WeekID"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V26S2, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V26S2:@FM:err$code)
      msg$id = "@GenFiscalDate2WeekID"; GoTo L$ERROR
   End
   handle$list<-1> = h$V26S2
   id$list<-1> = "V26S2"
   GoTo L$V0S76$RETURN$1
**************************************************
L$V26S2$FINISHED:
   job$V26S2$status = DSGetJobInfo(h$V26S2, DSJ.JOBSTATUS)
   job$V26S2$userstatus = DSGetJobInfo(h$V26S2, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "GenFiscalDate2WeekID":@FM:jb$V26S2:@FM:job$V26S2$status))
   IdV26S2%%Result2%%37 = job$V26S2$userstatus
   IdV26S2%%Result1%%38 = job$V26S2$status
   IdV26S2%%Name%%39 = jb$V26S2
   If (job$V26S2$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V26S2:@FM:DSTranslateCode(job$V26S2$status)), "@GenFiscalDate2WeekID")
   End
   rpt$V26S2 = DSMakeJobReport(h$V26S2, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V26S2:@FM:rpt$V26S2), "@GenFiscalDate2WeekID")
   rpt$all := "\\n":rpt$V26S2 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V26S2)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (IdV26S2%%Result1%%38 <>"1") Then GoTo L$V26S4$START
L$V26S2$RETURN$1:
   If (job$V26S2$status = DSJS.RUNOK) Then GoTo L$V26S0$START
L$V26S2$RETURN$2:
   GoTo L$WAITFORJOB
**************************************************
L$V26S4$START:
*** Activity "GenFiscalDate2WeekID_failure": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "GenFiscalDate2WeekID_failure":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@GenFiscalDate2WeekID_failure"; GoTo L$ERROR
   End
   p$V26S4$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV26S2%%Name%%39:" failed with status code = ":IdV26S2%%Result1%%38:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V26S4, p$V26S4$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "GenFiscalDate2WeekID_failure":@FM:r$V26S4))
   If r$V26S4 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V26S4), "@GenFiscalDate2WeekID_failure")
   End
   GoTo L$V26S2$RETURN$1
**************************************************
L$V28S0$START:
*** Activity "Notify_failure": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "Notify_failure":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@Notify_failure"; GoTo L$ERROR
   End
   p$V28S0$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV0S96%%Name%%30:" failed with status code = ":IdV0S96%%Result1%%29:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V28S0, p$V28S0$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "Notify_failure":@FM:r$V28S0))
   If r$V28S0 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V28S0), "@Notify_failure")
   End
   GoTo L$V0S96$RETURN$1
**************************************************
L$V32S1$START:
*** Activity "Batch_Publish_SNS_Data_failure": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "Batch_Publish_SNS_Data_failure":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@Batch_Publish_SNS_Data_failure"; GoTo L$ERROR
   End
   p$V32S1$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV32S2%%Name%%42:" failed with status code = ":IdV32S2%%Result1%%41:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V32S1, p$V32S1$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "Batch_Publish_SNS_Data_failure":@FM:r$V32S1))
   If r$V32S1 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V32S1), "@Batch_Publish_SNS_Data_failure")
   End
   GoTo L$V32S2$RETURN$2
**************************************************
L$V32S2$START:
*** Activity "Batch_Publish_SNS_Data": Initialize job
   jb$V32S2 = "Batch::Publish_SNS_Data"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Batch_Publish_SNS_Data":@FM:jb$V32S2))
   h$V32S2 = DSAttachJob(jb$V32S2, DSJ.ERRNONE)
   If (Not(h$V32S2)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V32S2:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
   h$V32S2 = DSPrepareJob(h$V32S2)
   If (Not(h$V32S2)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V32S2:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
L$V32S2$PREPARED:
   p$V32S2$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V32S2, "$DSS_DB_NAME", p$V32S2$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
   p$V32S2$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V32S2, "$DSS_DB_USERNAME", p$V32S2$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
   p$V32S2$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V32S2, "$DSS_DB_PASSWD", p$V32S2$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
   p$V32S2$4 = ($FROM_EMAIL)
   err$code = DSSetParam(h$V32S2, "$FROM_EMAIL", p$V32S2$4)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$FROM_EMAIL":@FM:err$code)
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
   p$V32S2$5 = ($TO_EMAIL)
   err$code = DSSetParam(h$V32S2, "$TO_EMAIL", p$V32S2$5)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL":@FM:err$code)
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
   p$V32S2$6 = ($APP_NAME)
   err$code = DSSetParam(h$V32S2, "$APP_NAME", p$V32S2$6)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$APP_NAME":@FM:err$code)
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
   p$V32S2$7 = ($SYS_CODE)
   err$code = DSSetParam(h$V32S2, "$SYS_CODE", p$V32S2$7)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$SYS_CODE":@FM:err$code)
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
   p$V32S2$8 = ($TO_EMAIL_SNS_CUSTOMER)
   err$code = DSSetParam(h$V32S2, "$TO_EMAIL_SNS_CUSTOMER", p$V32S2$8)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL_SNS_CUSTOMER":@FM:err$code)
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
   p$V32S2$9 = (RUN_BACKUP_PRIOR_WEEK_FLAG)
   err$code = DSSetParam(h$V32S2, "RUN_BACKUP_PRIOR_WEEK_FLAG", p$V32S2$9)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_BACKUP_PRIOR_WEEK_FLAG":@FM:err$code)
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V32S2, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V32S2:@FM:err$code)
      msg$id = "@Batch_Publish_SNS_Data"; GoTo L$ERROR
   End
   handle$list<-1> = h$V32S2
   id$list<-1> = "V32S2"
   GoTo L$V0S131$RETURN$2
**************************************************
L$V32S2$FINISHED:
   job$V32S2$status = DSGetJobInfo(h$V32S2, DSJ.JOBSTATUS)
   job$V32S2$userstatus = DSGetJobInfo(h$V32S2, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Batch_Publish_SNS_Data":@FM:jb$V32S2:@FM:job$V32S2$status))
   IdV32S2%%Result2%%40 = job$V32S2$userstatus
   IdV32S2%%Result1%%41 = job$V32S2$status
   IdV32S2%%Name%%42 = jb$V32S2
   If (job$V32S2$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V32S2:@FM:DSTranslateCode(job$V32S2$status)), "@Batch_Publish_SNS_Data")
   End
   rpt$V32S2 = DSMakeJobReport(h$V32S2, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V32S2:@FM:rpt$V32S2), "@Batch_Publish_SNS_Data")
   rpt$all := "\\n":rpt$V32S2 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V32S2)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (job$V32S2$status = DSJS.RUNOK) Then GoSub L$V0S133$START
   If (IdV32S2%%Result1%%41 <> "1") Then GoTo L$V32S1$START
L$V32S2$RETURN$2:
   GoTo L$WAITFORJOB
**************************************************
L$V0S131$START:
*** Decision "IF_PUBLISH_DATE"
   If (IdV0S63%%UserVar%%9 <> "Y") Then GoSub L$V0S133$START
   If (IdV0S63%%UserVar%%9 = "Y") Then GoTo L$V32S2$START
L$V0S131$RETURN$2:
   GoTo L$V0S100$RETURN$1
**************************************************
L$V0S133$START:
*** Sequencer "seq_end": wait until inputs ready
   seq$V0S133$status = 1
   If seq$V0S133$count > 0 Then Return
   seq$V0S133$count += 1
   seq$V0S133$status = 2
   GoTo L$V38S0$START
L$V0S133$RETURN$1:
   Return
**************************************************
L$V0S139$START:
*** Activity "Batch_Back_Del_SNS_Hist": Initialize job
   jb$V0S139 = "Batch::Backup_Del_SNS_Hist"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Batch_Back_Del_SNS_Hist":@FM:jb$V0S139))
   h$V0S139 = DSAttachJob(jb$V0S139, DSJ.ERRNONE)
   If (Not(h$V0S139)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V0S139:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   h$V0S139 = DSPrepareJob(h$V0S139)
   If (Not(h$V0S139)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V0S139:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
L$V0S139$PREPARED:
   p$V0S139$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V0S139, "$DSS_DB_NAME", p$V0S139$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   p$V0S139$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V0S139, "$DSS_DB_USERNAME", p$V0S139$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   p$V0S139$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V0S139, "$DSS_DB_PASSWD", p$V0S139$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   p$V0S139$4 = ($TO_EMAIL)
   err$code = DSSetParam(h$V0S139, "$TO_EMAIL", p$V0S139$4)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL":@FM:err$code)
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   p$V0S139$5 = ($FROM_EMAIL)
   err$code = DSSetParam(h$V0S139, "$FROM_EMAIL", p$V0S139$5)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$FROM_EMAIL":@FM:err$code)
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   p$V0S139$6 = ($APP_NAME)
   err$code = DSSetParam(h$V0S139, "$APP_NAME", p$V0S139$6)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$APP_NAME":@FM:err$code)
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   p$V0S139$7 = ($SYS_CODE)
   err$code = DSSetParam(h$V0S139, "$SYS_CODE", p$V0S139$7)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$SYS_CODE":@FM:err$code)
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   p$V0S139$8 = (SNAPSHOT_WK_DIMNSN_ID)
   err$code = DSSetParam(h$V0S139, "SNAPSHOT_WK_DIMNSN_ID", p$V0S139$8)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "SNAPSHOT_WK_DIMNSN_ID":@FM:err$code)
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   p$V0S139$9 = ($DSW_IN_DIR)
   err$code = DSSetParam(h$V0S139, "$DSW_IN_DIR", p$V0S139$9)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSW_IN_DIR":@FM:err$code)
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   p$V0S139$10 = ($DSW_SQL_DIR)
   err$code = DSSetParam(h$V0S139, "$DSW_SQL_DIR", p$V0S139$10)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSW_SQL_DIR":@FM:err$code)
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V0S139, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V0S139:@FM:err$code)
      msg$id = "@Batch_Back_Del_SNS_Hist"; GoTo L$ERROR
   End
   handle$list<-1> = h$V0S139
   id$list<-1> = "V0S139"
   GoTo L$V0S143$RETURN$2
**************************************************
L$V0S139$FINISHED:
   job$V0S139$status = DSGetJobInfo(h$V0S139, DSJ.JOBSTATUS)
   job$V0S139$userstatus = DSGetJobInfo(h$V0S139, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Batch_Back_Del_SNS_Hist":@FM:jb$V0S139:@FM:job$V0S139$status))
   IdV0S139%%Result2%%43 = job$V0S139$userstatus
   IdV0S139%%Result1%%44 = job$V0S139$status
   IdV0S139%%Name%%45 = jb$V0S139
   If (job$V0S139$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V0S139:@FM:DSTranslateCode(job$V0S139$status)), "@Batch_Back_Del_SNS_Hist")
   End
   rpt$V0S139 = DSMakeJobReport(h$V0S139, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V0S139:@FM:rpt$V0S139), "@Batch_Back_Del_SNS_Hist")
   rpt$all := "\\n":rpt$V0S139 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V0S139)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (IdV0S139%%Result1%%44 <>"1") Then GoTo L$V33S0$START
L$V0S139$RETURN$1:
   If (job$V0S139$status = DSJS.RUNOK) Then GoSub L$V0S146$START
   GoTo L$WAITFORJOB
**************************************************
L$V33S0$START:
*** Activity "bak_del_hist_failure": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "bak_del_hist_failure":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@bak_del_hist_failure"; GoTo L$ERROR
   End
   p$V33S0$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV0S22%%Name%%18:" failed with status code = ":IdV0S22%%Result1%%17:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V33S0, p$V33S0$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "bak_del_hist_failure":@FM:r$V33S0))
   If r$V33S0 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V33S0), "@bak_del_hist_failure")
   End
   GoTo L$V0S139$RETURN$1
**************************************************
L$V0S143$START:
*** Decision "if_run_archive"
   If (IdV0S63%%UserVar%%10 ='N') Then GoSub L$V0S146$START
   If (IdV0S63%%UserVar%%10 ='Y') Then GoTo L$V0S139$START
L$V0S143$RETURN$2:
   GoTo L$V0S185$RETURN$1
**************************************************
L$V0S146$START:
*** Sequencer "done": wait until inputs ready
   seq$V0S146$status = 1
   If seq$V0S146$count > 0 Then Return
   seq$V0S146$count += 1
   seq$V0S146$status = 2
   GoTo L$V0S71$START
L$V0S146$RETURN$1:
   Return
**************************************************
L$V0S174$START:
*** Activity "Load_VRR_Expird_Renwd": Initialize job
   jb$V0S174 = "Batch::Load_VRR_Expird_Renwd"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Load_VRR_Expird_Renwd":@FM:jb$V0S174))
   h$V0S174 = DSAttachJob(jb$V0S174, DSJ.ERRNONE)
   If (Not(h$V0S174)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V0S174:@FM:DSGetLastErrorMsg())
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   h$V0S174 = DSPrepareJob(h$V0S174)
   If (Not(h$V0S174)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V0S174:@FM:DSGetLastErrorMsg())
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
L$V0S174$PREPARED:
   p$V0S174$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V0S174, "$DSS_DB_NAME", p$V0S174$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V0S174, "$DSS_DB_USERNAME", p$V0S174$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V0S174, "$DSS_DB_PASSWD", p$V0S174$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$4 = (SNAPSHOT_WK_DIMNSN_ID)
   err$code = DSSetParam(h$V0S174, "SNAPSHOT_WK_DIMNSN_ID", p$V0S174$4)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "SNAPSHOT_WK_DIMNSN_ID":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$5 = "N"
   err$code = DSSetParam(h$V0S174, "REFRESH_FLAG", p$V0S174$5)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "REFRESH_FLAG":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$6 = (IdV0S63%%UserVar%%13)
   err$code = DSSetParam(h$V0S174, "RUN_ASP_FLAG", p$V0S174$6)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_ASP_FLAG":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$7 = (IdV0S63%%UserVar%%11)
   err$code = DSSetParam(h$V0S174, "RUN_VRR_EXPIRED_FLAG", p$V0S174$7)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_VRR_EXPIRED_FLAG":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$8 = (IdV0S63%%UserVar%%12)
   err$code = DSSetParam(h$V0S174, "RUN_VRR_RENEWD_FLAG", p$V0S174$8)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_VRR_RENEWD_FLAG":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$9 = ($FROM_EMAIL)
   err$code = DSSetParam(h$V0S174, "$FROM_EMAIL", p$V0S174$9)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$FROM_EMAIL":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$10 = ($TO_EMAIL)
   err$code = DSSetParam(h$V0S174, "$TO_EMAIL", p$V0S174$10)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$11 = ($SYS_CODE)
   err$code = DSSetParam(h$V0S174, "$SYS_CODE", p$V0S174$11)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$SYS_CODE":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$12 = ($APP_NAME)
   err$code = DSSetParam(h$V0S174, "$APP_NAME", p$V0S174$12)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$APP_NAME":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$13 = ($HRCL_NAME)
   err$code = DSSetParam(h$V0S174, "$HRCL_NAME", p$V0S174$13)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$HRCL_NAME":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   p$V0S174$14 = ('N')
   err$code = DSSetParam(h$V0S174, "LOAD_TOKEN_MULTI_YR_FLAG", p$V0S174$14)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "LOAD_TOKEN_MULTI_YR_FLAG":@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V0S174, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V0S174:@FM:err$code)
      msg$id = "@Load_VRR_Expird_Renwd"; GoTo L$ERROR
   End
   handle$list<-1> = h$V0S174
   id$list<-1> = "V0S174"
   GoTo L$V46S4$RETURN$1
**************************************************
L$V0S174$FINISHED:
   job$V0S174$status = DSGetJobInfo(h$V0S174, DSJ.JOBSTATUS)
   job$V0S174$userstatus = DSGetJobInfo(h$V0S174, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Load_VRR_Expird_Renwd":@FM:jb$V0S174:@FM:job$V0S174$status))
   IdV0S174%%Result2%%46 = job$V0S174$userstatus
   IdV0S174%%Result1%%47 = job$V0S174$status
   IdV0S174%%Name%%48 = jb$V0S174
   If (job$V0S174$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V0S174:@FM:DSTranslateCode(job$V0S174$status)), "@Load_VRR_Expird_Renwd")
   End
   rpt$V0S174 = DSMakeJobReport(h$V0S174, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V0S174:@FM:rpt$V0S174), "@Load_VRR_Expird_Renwd")
   rpt$all := "\\n":rpt$V0S174 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V0S174)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (IdV0S174%%Result1%%47<>"1") Then GoTo L$V35S0$START
L$V0S174$RETURN$1:
   If (job$V0S174$status = DSJS.RUNOK) Then GoSub L$V0S185$START
   GoTo L$WAITFORJOB
**************************************************
L$V35S0$START:
*** Activity "vrr_failed": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "vrr_failed":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@vrr_failed"; GoTo L$ERROR
   End
   p$V35S0$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV0S174%%Name%%48:" failed with status code = ":IdV0S174%%Result1%%47:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V35S0, p$V35S0$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "vrr_failed":@FM:r$V35S0))
   If r$V35S0 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V35S0), "@vrr_failed")
   End
   GoTo L$V0S174$RETURN$1
**************************************************
L$V0S185$START:
*** Sequencer "RMS_VRR_Done": wait until inputs ready
   seq$V0S185$status = 1
   seq$V0S185$count += 1
   If seq$V0S185$count < 2 Then Return
   seq$V0S185$status = 2
   GoTo L$V0S143$START
L$V0S185$RETURN$1:
   Return
**************************************************
L$V0S213$START:
*** Decision "IF_RUN_TM1_FLAG"
   If (IdV0S63%%UserVar%%14 <>'Y') Then GoSub L$V0S76$START
   If (IdV0S63%%UserVar%%14 ='Y') Then GoTo L$V0S96$START
L$V0S213$RETURN$2:
   GoTo L$V0S29$RETURN$1
**************************************************
L$V0S221$START:
*** Activity "Start_Mail": Initialize job
   jb$V0S221 = "Batch::Master_Publish_Start"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Start_Mail":@FM:jb$V0S221))
   h$V0S221 = DSAttachJob(jb$V0S221, DSJ.ERRNONE)
   If (Not(h$V0S221)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V0S221:@FM:DSGetLastErrorMsg())
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   h$V0S221 = DSPrepareJob(h$V0S221)
   If (Not(h$V0S221)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V0S221:@FM:DSGetLastErrorMsg())
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
L$V0S221$PREPARED:
   p$V0S221$1 = (IdV0S63%%UserVar%%5)
   err$code = DSSetParam(h$V0S221, "RUN_RMS_TRGT_FLAG", p$V0S221$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_RMS_TRGT_FLAG":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$2 = (IdV0S63%%UserVar%%6)
   err$code = DSSetParam(h$V0S221, "RUN_RMS_ACTL_FLAG", p$V0S221$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_RMS_ACTL_FLAG":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$3 = (IdV0S63%%UserVar%%11)
   err$code = DSSetParam(h$V0S221, "RUN_VRR_EXPIRED_FLAG", p$V0S221$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_VRR_EXPIRED_FLAG":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$4 = (IdV0S63%%UserVar%%12)
   err$code = DSSetParam(h$V0S221, "RUN_VRR_RENEWED_FLAG", p$V0S221$4)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_VRR_RENEWED_FLAG":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$5 = (IdV0S63%%UserVar%%13)
   err$code = DSSetParam(h$V0S221, "RUN_VRR_ASP_FLAG", p$V0S221$5)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_VRR_ASP_FLAG":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$6 = (IdV0S63%%UserVar%%14)
   err$code = DSSetParam(h$V0S221, "RUN_TM1_FLAG", p$V0S221$6)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_TM1_FLAG":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$7 = (IdV0S63%%UserVar%%8)
   err$code = DSSetParam(h$V0S221, "RUN_SNS_DTL_SUM_FLAG", p$V0S221$7)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_SNS_DTL_SUM_FLAG":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$8 = (IdV0S63%%UserVar%%7)
   err$code = DSSetParam(h$V0S221, "SYNC_PROD_CUST_FLAG", p$V0S221$8)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "SYNC_PROD_CUST_FLAG":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$9 = (IdV0S63%%UserVar%%10)
   err$code = DSSetParam(h$V0S221, "ARCHIVE_INTERMEDIATE_WEEK_FLAG", p$V0S221$9)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "ARCHIVE_INTERMEDIATE_WEEK_FLAG":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$10 = (IdV0S63%%UserVar%%9)
   err$code = DSSetParam(h$V0S221, "PUBLISH_DATE_FLAG", p$V0S221$10)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "PUBLISH_DATE_FLAG":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$11 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V0S221, "$DSS_DB_NAME", p$V0S221$11)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$12 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V0S221, "$DSS_DB_USERNAME", p$V0S221$12)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$13 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V0S221, "$DSS_DB_PASSWD", p$V0S221$13)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$14 = ($TO_EMAIL)
   err$code = DSSetParam(h$V0S221, "$TO_EMAIL", p$V0S221$14)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$15 = ($SYS_CODE)
   err$code = DSSetParam(h$V0S221, "$SYS_CODE", p$V0S221$15)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$SYS_CODE":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$16 = ($APP_NAME)
   err$code = DSSetParam(h$V0S221, "$APP_NAME", p$V0S221$16)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$APP_NAME":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$17 = ($FROM_EMAIL)
   err$code = DSSetParam(h$V0S221, "$FROM_EMAIL", p$V0S221$17)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$FROM_EMAIL":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$18 = ('Master')
   err$code = DSSetParam(h$V0S221, "RUN_FLAG", p$V0S221$18)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "RUN_FLAG":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   p$V0S221$19 = (IdV1S0%%UserVar%%1)
   err$code = DSSetParam(h$V0S221, "JOB_NAME", p$V0S221$19)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "JOB_NAME":@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V0S221, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V0S221:@FM:err$code)
      msg$id = "@Start_Mail"; GoTo L$ERROR
   End
   handle$list<-1> = h$V0S221
   id$list<-1> = "V0S221"
   GoTo L$V0S63$RETURN$1
**************************************************
L$V0S221$FINISHED:
   job$V0S221$status = DSGetJobInfo(h$V0S221, DSJ.JOBSTATUS)
   job$V0S221$userstatus = DSGetJobInfo(h$V0S221, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Start_Mail":@FM:jb$V0S221:@FM:job$V0S221$status))
   IdV0S221%%Result2%%49 = job$V0S221$userstatus
   IdV0S221%%Result1%%50 = job$V0S221$status
   IdV0S221%%Name%%51 = jb$V0S221
   If (job$V0S221$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V0S221:@FM:DSTranslateCode(job$V0S221$status)), "@Start_Mail")
   End
   rpt$V0S221 = DSMakeJobReport(h$V0S221, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V0S221:@FM:rpt$V0S221), "@Start_Mail")
   rpt$all := "\\n":rpt$V0S221 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V0S221)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (IdV0S221%%Result1%%50 <>"1") Then GoTo L$V37S0$START
L$V0S221$RETURN$1:
   If (job$V0S221$status = DSJS.RUNOK) Then GoTo L$V0S98$START
L$V0S221$RETURN$2:
   GoTo L$WAITFORJOB
**************************************************
L$V37S0$START:
*** Activity "Start_Mail_failure": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "Start_Mail_failure":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@Start_Mail_failure"; GoTo L$ERROR
   End
   p$V37S0$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV0S221%%Name%%51:" failed with status code = ":IdV0S221%%Result1%%50:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V37S0, p$V37S0$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "Start_Mail_failure":@FM:r$V37S0))
   If r$V37S0 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V37S0), "@Start_Mail_failure")
   End
   GoTo L$V0S221$RETURN$1
**************************************************
L$V38S0$START:
*** Decision "RUN_TM1_END_FLAG"
   If (IdV0S63%%UserVar%%14 <>'E') Then GoSub L$V38S3$START
   If (IdV0S63%%UserVar%%14 ='E') Then GoTo L$V38S2$START
L$V38S0$RETURN$2:
   GoTo L$V0S133$RETURN$1
**************************************************
L$V38S1$START:
*** Activity "TM1_failure": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "TM1_failure":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@TM1_failure"; GoTo L$ERROR
   End
   p$V38S1$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV38S2%%Name%%54:" failed with status code = ":IdV38S2%%Result1%%53:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V38S1, p$V38S1$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "TM1_failure":@FM:r$V38S1))
   If r$V38S1 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V38S1), "@TM1_failure")
   End
   GoTo L$V38S2$RETURN$1
**************************************************
L$V38S2$START:
*** Activity "Batch_Wait_For_TM1_Cube_END": Initialize job
   jb$V38S2 = "Batch::Wait_For_TM1_Cube"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Batch_Wait_For_TM1_Cube_END":@FM:jb$V38S2))
   h$V38S2 = DSAttachJob(jb$V38S2, DSJ.ERRNONE)
   If (Not(h$V38S2)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V38S2:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   h$V38S2 = DSPrepareJob(h$V38S2)
   If (Not(h$V38S2)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V38S2:@FM:DSGetLastErrorMsg())
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
L$V38S2$PREPARED:
   p$V38S2$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V38S2, "$DSS_DB_NAME", p$V38S2$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   p$V38S2$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V38S2, "$DSS_DB_USERNAME", p$V38S2$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   p$V38S2$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V38S2, "$DSS_DB_PASSWD", p$V38S2$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   p$V38S2$4 = ($SYS_CODE)
   err$code = DSSetParam(h$V38S2, "$SYS_CODE", p$V38S2$4)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$SYS_CODE":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   p$V38S2$5 = ($APP_NAME)
   err$code = DSSetParam(h$V38S2, "$APP_NAME", p$V38S2$5)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$APP_NAME":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   p$V38S2$6 = ($TO_EMAIL)
   err$code = DSSetParam(h$V38S2, "$TO_EMAIL", p$V38S2$6)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   p$V38S2$7 = ($FROM_EMAIL)
   err$code = DSSetParam(h$V38S2, "$FROM_EMAIL", p$V38S2$7)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$FROM_EMAIL":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   p$V38S2$8 = ($TO_EMAIL_SNS_CUSTOMER)
   err$code = DSSetParam(h$V38S2, "$TO_EMAIL_SNS_CUSTOMER", p$V38S2$8)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$TO_EMAIL_SNS_CUSTOMER":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   p$V38S2$9 = ($DSW_IN_DIR)
   err$code = DSSetParam(h$V38S2, "$DSW_IN_DIR", p$V38S2$9)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSW_IN_DIR":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   p$V38S2$10 = ('N')
   err$code = DSSetParam(h$V38S2, "NOTIFY_CUSTOMER_FLAG", p$V38S2$10)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "NOTIFY_CUSTOMER_FLAG":@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V38S2, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V38S2:@FM:err$code)
      msg$id = "@Batch_Wait_For_TM1_Cube_END"; GoTo L$ERROR
   End
   handle$list<-1> = h$V38S2
   id$list<-1> = "V38S2"
   GoTo L$V38S0$RETURN$2
**************************************************
L$V38S2$FINISHED:
   job$V38S2$status = DSGetJobInfo(h$V38S2, DSJ.JOBSTATUS)
   job$V38S2$userstatus = DSGetJobInfo(h$V38S2, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Batch_Wait_For_TM1_Cube_END":@FM:jb$V38S2:@FM:job$V38S2$status))
   IdV38S2%%Result2%%52 = job$V38S2$userstatus
   IdV38S2%%Result1%%53 = job$V38S2$status
   IdV38S2%%Name%%54 = jb$V38S2
   If (job$V38S2$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V38S2:@FM:DSTranslateCode(job$V38S2$status)), "@Batch_Wait_For_TM1_Cube_END")
   End
   rpt$V38S2 = DSMakeJobReport(h$V38S2, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V38S2:@FM:rpt$V38S2), "@Batch_Wait_For_TM1_Cube_END")
   rpt$all := "\\n":rpt$V38S2 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V38S2)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (IdV38S2%%Result1%%53 <>"1") Then GoTo L$V38S1$START
L$V38S2$RETURN$1:
   If (job$V38S2$status = DSJS.RUNOK) Then GoSub L$V38S3$START
   GoTo L$WAITFORJOB
**************************************************
L$V38S3$START:
*** Sequencer "TM1_done": wait until inputs ready
   seq$V38S3$status = 1
   If seq$V38S3$count > 0 Then Return
   seq$V38S3$count += 1
   seq$V38S3$status = 2
   GoTo L$V22S0$START
L$V38S3$RETURN$1:
   Return
**************************************************
L$V46S4$START:
*** Activity "Populate_Token_Multi_Yr_Sns_Part": Initialize job
   jb$V46S4 = "Populate_Token_Multi_Yr_Sns_Part"
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0057\\%1 (JOB %2) started", "Populate_Token_Multi_Yr_Sns_Part":@FM:jb$V46S4))
   h$V46S4 = DSAttachJob(jb$V46S4, DSJ.ERRNONE)
   If (Not(h$V46S4)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0001\\Error calling DSAttachJob(%1)<L>%2", jb$V46S4:@FM:DSGetLastErrorMsg())
      msg$id = "@Populate_Token_Multi_Yr_Sns_Part"; GoTo L$ERROR
   End
   h$V46S4 = DSPrepareJob(h$V46S4)
   If (Not(h$V46S4)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0012\\Error calling DSPrepareJob(%1)<L>%2", jb$V46S4:@FM:DSGetLastErrorMsg())
      msg$id = "@Populate_Token_Multi_Yr_Sns_Part"; GoTo L$ERROR
   End
L$V46S4$PREPARED:
   p$V46S4$1 = ($DSS_DB_NAME)
   err$code = DSSetParam(h$V46S4, "$DSS_DB_NAME", p$V46S4$1)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_NAME":@FM:err$code)
      msg$id = "@Populate_Token_Multi_Yr_Sns_Part"; GoTo L$ERROR
   End
   p$V46S4$2 = ($DSS_DB_USERNAME)
   err$code = DSSetParam(h$V46S4, "$DSS_DB_USERNAME", p$V46S4$2)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_USERNAME":@FM:err$code)
      msg$id = "@Populate_Token_Multi_Yr_Sns_Part"; GoTo L$ERROR
   End
   p$V46S4$3 = ($DSS_DB_PASSWD)
   err$code = DSSetParam(h$V46S4, "$DSS_DB_PASSWD", p$V46S4$3)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0002\\Error calling DSSetParam(%1), code=%2[E]", "$DSS_DB_PASSWD":@FM:err$code)
      msg$id = "@Populate_Token_Multi_Yr_Sns_Part"; GoTo L$ERROR
   End
   err$code = DSRunJob(h$V46S4, DSJ.RUNNORMAL)
   If (err$code <> DSJE.NOERROR) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0003\\Error calling DSRunJob(%1), code=%2[E]", jb$V46S4:@FM:err$code)
      msg$id = "@Populate_Token_Multi_Yr_Sns_Part"; GoTo L$ERROR
   End
   handle$list<-1> = h$V46S4
   id$list<-1> = "V46S4"
   GoTo L$V0S98$RETURN$1
**************************************************
L$V46S4$FINISHED:
   job$V46S4$status = DSGetJobInfo(h$V46S4, DSJ.JOBSTATUS)
   job$V46S4$userstatus = DSGetJobInfo(h$V46S4, DSJ.USERSTATUS)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0063\\%1 (JOB %2) finished, status=%3[E]", "Populate_Token_Multi_Yr_Sns_Part":@FM:jb$V46S4:@FM:job$V46S4$status))
   IdV46S4%%Result2%%55 = job$V46S4$userstatus
   IdV46S4%%Result1%%56 = job$V46S4$status
   IdV46S4%%Name%%57 = jb$V46S4
   If (job$V46S4$status <> DSJS.RUNOK) Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0030\\Job %1 did not finish OK, status = '%2'", jb$V46S4:@FM:DSTranslateCode(job$V46S4$status)), "@Populate_Token_Multi_Yr_Sns_Part")
   End
   rpt$V46S4 = DSMakeJobReport(h$V46S4, 1, "CRLF")
   Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0004\\Report on job: %1<L>%2", jb$V46S4:@FM:rpt$V46S4), "@Populate_Token_Multi_Yr_Sns_Part")
   rpt$all := "\\n":rpt$V46S4 ;* accumulate job reports
   dummy$ = DSDetachJob(h$V46S4)
   If b$Abandoning Then GoTo L$WAITFORJOB
   If (job$V46S4$status = DSJS.RUNOK) Then GoTo L$V0S174$START
L$V46S4$RETURN$1:
   If (IdV46S4%%Result1%%56 <> "1") Then GoTo L$V46S5$START
L$V46S4$RETURN$2:
   If (job$V46S4$status = DSJS.RUNOK) Then GoTo L$V0S22$START
L$V46S4$RETURN$3:
   GoTo L$WAITFORJOB
**************************************************
L$V46S5$START:
*** Activity "load_failure": Call routine
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0058\\%1 (ROUTINE %2) started", "load_failure":@FM:"DSSendMail"))
   rtn$ok = DSCheckRoutine("DSSendMail")
   If (Not(rtn$ok)) Then
      msg$ = DSMakeMsg("DSTAGE_JSG_M_0005\\BASIC routine is not cataloged: %1", "DSSendMail")
      msg$id = "@load_failure"; GoTo L$ERROR
   End
   p$V46S5$0 = "To:":$TO_EMAIL:"\\nFrom:":$FROM_EMAIL:"\\nSubject:":$SYS_CODE:"F":$APP_NAME:"-:":IdV1S0%%UserVar%%2:" on ":IdV1S0%%UserVar%%0:" - ":IdV1S0%%UserVar%%3:": job ":IdV46S4%%Name%%57:" failed with status code = ":IdV46S4%%Result1%%56:"\\nServer:":IdV1S0%%UserVar%%0:"\\nBody:\\n":rpt$all
   Call 'DSSendMail'(r$V46S5, p$V46S5$0)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0064\\%1 finished, reply=%2", "load_failure":@FM:r$V46S5))
   If r$V46S5 <> 0 Then
      Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0041\\Routine %1 did not finish OK, return code = '%2'", "DSSendMail":@FM:r$V46S5), "@load_failure")
   End
   GoTo L$V46S4$RETURN$2
**************************************************
L$WAITFORJOB:
   If handle$list = "" Then GoTo L$FINISH
   handle$ = DSWaitForJob(handle$list)
   If handle$ = 0 Then handle$ = handle$list<1>
   Locate handle$ In handle$list Setting index$ Then
      id$ = id$list<index$>
      Del id$list<index$>; Del handle$list<index$>
      b$Abandoning = abort$list<index$>; Del abort$list<index$>
      Begin Case
      Case id$ = "V0S22"
         GoTo L$V0S22$FINISHED
      Case id$ = "V0S29"
         GoTo L$V0S29$FINISHED
      Case id$ = "V0S33"
         GoTo L$V0S33$FINISHED
      Case id$ = "V0S81"
         GoTo L$V0S81$FINISHED
      Case id$ = "V0S96"
         GoTo L$V0S96$FINISHED
      Case id$ = "V0S98"
         GoTo L$V0S98$FINISHED
      Case id$ = "V0S100"
         GoTo L$V0S100$FINISHED
      Case id$ = "V26S2"
         GoTo L$V26S2$FINISHED
      Case id$ = "V32S2"
         GoTo L$V32S2$FINISHED
      Case id$ = "V0S139"
         GoTo L$V0S139$FINISHED
      Case id$ = "V0S174"
         GoTo L$V0S174$FINISHED
      Case id$ = "V0S221"
         GoTo L$V0S221$FINISHED
      Case id$ = "V38S2"
         GoTo L$V38S2$FINISHED
      Case id$ = "V46S4"
         GoTo L$V46S4$FINISHED
      End Case
   End
* Error if fall though
   handle$list = ""
   msg$ = DSMakeMsg("DSTAGE_JSG_M_0008\\Error calling DSWaitForJob(), code=%1[E]", handle$)
   msg$id = "@Coordinator"; GoTo L$ERROR
**************************************************
L$ERROR:
   Call DSLogWarn(DSMakeMsg("DSTAGE_JSG_M_0009\\Controller problem: %1", msg$), msg$id)
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0052\\Exception raised: %1", msg$id:", ":msg$))
   abort$list = Ifs(handle$list, Str(1:@FM, DCount(handle$list, @FM)), "")
   b$Abandoning = @True
   GoTo L$WAITFORJOB
L$ABORT:
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0056\\Sequence failed", ""))
   Call DSLogInfo(summary$, "@Coordinator")
   Call DSLogFatal(DSMakeMsg("DSTAGE_JSG_M_0013\\Sequence job will abort due to previous unrecoverable errors", ""), "@Coordinator")
**************************************************
L$FINISH:
   If b$Abandoning Then GoTo L$ABORT
   If (seq$V0S76$status = 1) Then
      Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0072\\Note: Sequencer '%1' was entered, but never exited", "all_done"), "@Coordinator")
   End
   If (seq$V0S133$status = 1) Then
      Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0072\\Note: Sequencer '%1' was entered, but never exited", "seq_end"), "@Coordinator")
   End
   If (seq$V0S146$status = 1) Then
      Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0072\\Note: Sequencer '%1' was entered, but never exited", "done"), "@Coordinator")
   End
   If (seq$V0S185$status = 1) Then
      Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0072\\Note: Sequencer '%1' was entered, but never exited", "RMS_VRR_Done"), "@Coordinator")
   End
   If (seq$V38S3$status = 1) Then
      Call DSLogInfo(DSMakeMsg("DSTAGE_JSG_M_0072\\Note: Sequencer '%1' was entered, but never exited", "TM1_done"), "@Coordinator")
   End
   summary$<1,-1> = Time$$:Convert(@VM, " ", DSMakeMsg("DSTAGE_JSG_M_0054\\Sequence finished OK", ""))
   Call DSLogInfo(summary$, "@Coordinator")
   L$EXIT: Return To L$EXIT
 

=+=+=+=
      ControlAfterSubr "0"
      Parameters "CParameters"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Prompt "Enter the DSS Database Name"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Prompt "Enter the DSS Database User Name"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Prompt "Enter the DSS Database Password"
         Default "HDI@IJV8O9JN064IL:JD1K95"
         ParamType "1"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_NAME"
         Prompt "Enter the ODS Database Name"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_USERNAME"
         Prompt "Enter the ODS Database User Name"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_PASSWD"
         Prompt "Enter the ODS Database Password"
         Default "HDI@IJV8O9JN064IL:JD1K95"
         ParamType "1"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Prompt "Enter the System Code"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Prompt "Enter the APP Name"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Prompt "Enter the From Email Address"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Prompt "Enter the To Email Address"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SNAPSHOT_WK_DIMNSN_ID"
         Prompt "Snapshot week dimension id"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "DIMNSN_LIST"
         Prompt "Enter the list of dimnsn jobs to run"
         Default "CRM_GEOGPHY,DISTRIBTN_CHNL,INDUS_SCTR,SAS_SUM_PROD,CLIENT,EDS,ELA,ACQSTN,CTRCT_TYPE"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$HRCL_NAME"
         Prompt "Enter the author who updates/inserts the data"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_SQL_DIR"
         Prompt "Enter the SQL folder for DSW"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_IN_DIR"
         Prompt "Enter the In folder for DSW"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SNS_SQL_File"
         Prompt "Enter the S&S Validation SQL file"
         Default "DEFAULT"
         HelpTxt "You can specify one or multiple sql files when you run this jobs."
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_RMS_TRGT_FLAG"
         Prompt "Whether to run RMS TARGET"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_RMS_ACTL_FLAG"
         Prompt "Whether to run RMS ACTUAL"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_VRR_EXPIRED_FLAG"
         Prompt "Whether to run VRR Expired Flag"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_VRR_RENEWED_FLAG"
         Prompt "Whether to run VRR Renewed Flag"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_VRR_ASP_FLAG"
         Prompt "Whether to run VRR ASP Flag"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_TM1_FLAG"
         Prompt "Whether to run TM1 Flag"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_BACKUP_PRIOR_WEEK_FLAG"
         Prompt "Whether to run backup Prior week"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SYNC_PROD_CUST_FLAG"
         Prompt "Whether to synchronize prod and cust"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_SNS_DTL_SUM_FLAG"
         Prompt "Whether to run SNS DTL SUM Process"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "ARCHIVE_INTERMEDIATE_WEEK_FLAG"
         Prompt "Whether to achive inter mediate week data"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "PUBLISH_DATE_FLAG"
         Prompt "Whether to publish the data"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DONE_SIGNAL_FILE_UC"
         Prompt "Enter the file path of UC process done signal "
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DONE_SIGNAL_FILE_CUST"
         Prompt "Enter the file path of Customer Dimension process done signal "
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DONE_SIGNAL_FILE_PROD"
         Prompt "Enter the file path of Product Dimension process done signal "
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DONE_SIGNAL_FILE_RMS"
         Prompt "Enter the file path of RMS process done signal "
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "WAIT_CUST_PROD_SIGNAL_FILE"
         Prompt "Whether to wait for cust prod process done signal file"
         Default "Y"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "WAIT_FOR_UC_SIGNAL_FILE"
         Prompt "Whether to wait for UC process done signal file"
         Default "Y"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$COGNOS_ACCOUNT_NAME"
         Prompt "Enter the Cognos Account Name"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$COGNOS_SERVER_NAME_SS"
         Prompt "Enter the Cognos Server Name for SS"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DB2_PRT_DIR"
         Prompt "Enter the DB2 PRT Dir"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SKIP_BUILD_CUBE"
         Prompt "Enter the flag to indicate to skip building the cube"
         Default "N"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SKIP_COPY_TABLE"
         Prompt "Enter the flag to indicate to skip copying the tables"
         Default "N"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL_SNS_CUSTOMER"
         Prompt "Enter the To Email Address for SNS Customer"
         Default "$PROJDEF"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "NOTIFY_CUSTOMER_FLAG"
         Prompt "Enter the flag to indicate to notify customer"
         Default "Y"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "IGNORE_STATUS"
         Prompt "Enter the flag to indiate to ignore the status checking "
         Default "N"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "COMMENT"
         Prompt "Enter the comment why we need to run the job"
         Default "DEFAULT"
         ParamType "0"
         ParamLength "0"
         ParamScale "0"
      END DSSUBRECORD
      MetaBag "CMetaProperty"
      BEGIN DSSUBRECORD
         Owner "APT"
         Name "AdvancedRuntimeOptions"
         Value "#DSProjectARTOptions#"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Owner "APT"
         Name "SequenceUseGridProperties"
         Value "0"
      END DSSUBRECORD
      NULLIndicatorPosition "0"
      Dependencies "CJobDepend"
      BEGIN DSSUBRECORD
         Name "Batch::RMS_Process"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "Batch::SNS_Process"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "Batch::Sync_Prod_Cust_Dimnsn"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "Gen_Run_Flag_hash"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "Batch::Wait_For_TM1_Cube"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "Lock_SNS_Status"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "UnLock_SNS_Status"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "Gen_Fiscal_Week_ID_From_Week_Table"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "Batch::Publish_SNS_Data"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "Batch::Backup_Del_SNS_Hist"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "Batch::Load_VRR_Expird_Renwd"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "Batch::Master_Publish_Start"
         Type "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "Populate_Token_Multi_Yr_Sns_Part"
         Type "0"
      END DSSUBRECORD
      IsTemplate "0"
      NLSLocale ",,,,"
      JobType "2"
      Category "\\Jobs\\SNS\\Batch_Process"
      CenturyBreakYear "30"
      NextAliasID "2"
      ParameterFileDDName "DD00001"
      ReservedWordCheck "1"
      TransactionSize "0"
      ValidationStatus "0"
      Uploadable "0"
      PgmCustomizationFlag "0"
      JobReportFlag "0"
      AllowMultipleInvocations "0"
      JobSeqCodeGenOpts "logjoberrors,logjobreports"
      Act2ActOverideDefaults "0"
      Act2ActEnableRowBuffer "0"
      Act2ActUseIPC "0"
      Act2ActBufferSize "0"
      Act2ActIPCTimeout "0"
      ExpressionSemanticCheckFlag "0"
      TraceOption "0"
      EnableCacheSharing "0"
      RuntimeColumnPropagation "0"
      RelStagesInJobStatus "-1"
      WebServiceEnabled "0"
      MFProcessMetaData "0"
      MFProcessMetaDataXMLFileExchangeMethod "0"
      IMSProgType "0"
      CopyLibPrefix "ARDT"
      RecordPerformanceResults "0"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0"
      OLEType "CContainerView"
      Readonly "0"
      Name "Job"
      NextID "1"
      IsTopLevel "0"
      StageList "V0S22|V0S29|V0S31|V0S33|V0S37|V0S38|V1S0|V0S63|V0S71|V0S72|V0S76|V22S0|V0S81|V23S0|V0S96|V0S98|V0S100|V26S0|V26S2|V26S4|V28S0|V32S1|V32S2|V0S131|V0S133|V0S139|V33S0|V0S143|V0S146|V0S174|V35S0|V0S185|V0S213|V0S221|V37S0|V38S0|V38S1|V38S2|V38S3|V46S4|V46S5"
      StageXPos "960|2016|960|1656|2016|1488|336|336|1656|1848|1848|504|336|552|2232|672|1440|1632|1848|1848|2448|1152|1152|1248|1080|1368|1368|1296|1464|960|960|1104|2232|504|504|912|816|816|720|816|816"
      StageYPos "288|360|168|528|144|528|72|360|360|360|528|720|216|216|528|360|720|720|720|888|528|960|840|720|720|240|120|360|360|432|552|360|360|360|528|720|960|840|720|360|528"
      StageTypes "CJSJobActivity|CJSJobActivity|CJSMailActivity|CJSJobActivity|CJSMailActivity|CJSMailActivity|CJSUserVarsActivity|CJSUserVarsActivity|CJSCondition|CJSCondition|CJSSequencer|CJSMailActivity|CJSJobActivity|CJSMailActivity|CJSJobActivity|CJSJobActivity|CJSJobActivity|CJSUserVarsActivity|CJSJobActivity|CJSMailActivity|CJSMailActivity|CJSMailActivity|CJSJobActivity|CJSCondition|CJSSequencer|CJSJobActivity|CJSMailActivity|CJSCondition|CJSSequencer|CJSJobActivity|CJSMailActivity|CJSSequencer|CJSCondition|CJSJobActivity|CJSMailActivity|CJSCondition|CJSMailActivity|CJSJobActivity|CJSSequencer|CJSJobActivity|CJSMailActivity"
      NextStageID "386"
      SnapToGrid "1"
      GridLines "0"
      ZoomValue "80"
      StageXSize "48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48"
      StageYSize "48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48|48"
      ContainerViewSizing "0016 0001 1307 0721 0000 0001 0240 0240"
      StageNames "Batch_RMS_Process|Batch_SNS_PROCESS|RMS_failure|Batch_Sync_Prod_dimnsn|Batch_SNS_PROCESS_failure|Batch_Sync_Prod_dimnsn_failure|Initialize_Param|Init_Flag|IF_SYSNC_CUST_PROD|IF_RUN_SNS_PROCESS|all_done|Batch_successful|Gen_Run_Flag_hash|notify_Gen_Run_Flag_hash_failure|Batch_Wait_For_TM1_Cube|Lock_SNS_Status|UnLock_SNS_Status|Param|GenFiscalDate2WeekID|GenFiscalDate2WeekID_failure|Notify_failure|Batch_Publish_SNS_Data_failure|Batch_Publish_SNS_Data|IF_PUBLISH_DATE|seq_end|Batch_Back_Del_SNS_Hist|bak_del_hist_failure|if_run_archive|done|Load_VRR_Expird_Renwd|vrr_failed|RMS_VRR_Done|IF_RUN_TM1_FLAG|Start_Mail|Start_Mail_failure|RUN_TM1_END_FLAG|TM1_failure|Batch_Wait_For_TM1_Cube_END|TM1_done|Populate_Token_Multi_Yr_Sns_Part|load_failure"
      StageTypeIDs "CJobActivity|CJobActivity|CNotificationActivity|CJobActivity|CNotificationActivity|CNotificationActivity|CUserVarsActivity|CUserVarsActivity|CCondition|CCondition|CSequencer|CNotificationActivity|CJobActivity|CNotificationActivity|CJobActivity|CJobActivity|CJobActivity|CUserVarsActivity|CJobActivity|CNotificationActivity|CNotificationActivity|CNotificationActivity|CJobActivity|CCondition|CSequencer|CJobActivity|CNotificationActivity|CCondition|CSequencer|CJobActivity|CNotificationActivity|CSequencer|CCondition|CJobActivity|CNotificationActivity|CCondition|CNotificationActivity|CJobActivity|CSequencer|CJobActivity|CNotificationActivity"
      LinkNames "failure,RMS_C|failure,notify_customer| |failure,sysnc_success| | |to_init_flg|check|NO,YES|YES,NO_SYSNC|to_wk_id| |to_init_para,failure| |SNS_SUCCESS,failure|token_load|unclok_success|unlock|to_init,failure| | | |failure,ok|run_sns,skip_publish|TM1_END|run_done,failure| |yes,no|to_sns|VRR_C,failure| |backup|YES,No|lock,failure| |YES,No| |TM1_SUCCESS,failure|end|rms,load_failure,vrr| "
      LinkHasMetaDatas "False,False|False,False| |False,False| | |False|False|False,False|False,False|False| |False,False| |False,False|False|False|False|False,False| | | |False,False|False,False|False|False,False| |False,False|False|False,False| |False|False,False|False,False| |False,False| |False,False|False|False,False,False| "
      LinkTypes "1,1|1,1| |1,1| | |1|1|1,1|1,1|1| |1,1| |1,1|1|1|1|1,1| | | |1,1|1,1|1|1,1| |1,1|1|1,1| |1|1,1|1,1| |1,1| |1,1|1|1,1,1| "
      LinkNamePositionXs "984,1046|2040,2153| |1539,1764| | |360|464|1727,1680|1897,1872|1872| |299,384| |1896,2315|726|1296|1578|1738,1872| | | |1176,1130|1246,1143|965|1425,1392| |1340,1376|1513|1070,984| |1156|2265,2192|554,528| |915,780| |763,840|566|899,840,876| "
      LinkNamePositionYs "250,311|280,384| |538,552| | |151|384|384,464|369,424|616| |332,240| |552,552|384|744|744|744,823| | | |906,784|788,744|744|291,201| |340,384|384|425,521| |384|444,413|384,482| |786,744| |769,924|744|341,484,406| "
      TargetStageIDs "V0S31,V0S185|V0S37,V0S213| |V0S38,V0S76| | |V0S81|V0S221|V0S72,V0S33|V0S29,V0S76|V26S2| |V0S63,V23S0| |V0S76,V28S0|V46S4|V0S131|V0S100|V26S0,V26S4| | | |V32S1,V0S133|V32S2,V0S133|V38S0|V0S146,V33S0| |V0S139,V0S146|V0S71|V0S185,V35S0| |V0S143|V0S96,V0S76|V0S98,V37S0| |V38S2,V38S3| |V38S3,V38S1|V22S0|V0S22,V46S5,V0S174| "
      SourceStageEffectiveExecutionModes "0,0|0,0| |0,0| | |0|0|0,0|0,0|0| |0,0| |0,0|0|0|0|0,0| | | |0,0|0,0|0|0,0| |0,0|0|0,0| |0|0,0|0,0| |0,0| |0,0|0|0,0,0| "
      SourceStageRuntimeExecutionModes "0,0|0,0| |0,0| | |0|0|0,0|0,0|0| |0,0| |0,0|0|0|0|0,0| | | |0,0|0,0|0|0,0| |0,0|0|0,0| |0|0,0|0,0| |0,0| |0,0|0|0,0,0| "
      TargetStageEffectiveExecutionModes "0,0|0,0| |0,0| | |0|0|0,0|0,0|0| |0,0| |0,0|0|0|0|0,0| | | |0,0|0,0|0|0,0| |0,0|0|0,0| |0|0,0|0,0| |0,0| |0,0|0|0,0,0| "
      TargetStageRuntimeExecutionModes "0,0|0,0| |0,0| | |0|0|0,0|0,0|0| |0,0| |0,0|0|0|0|0,0| | | |0,0|0,0|0|0,0| |0,0|0|0,0| |0|0,0|0,0| |0,0| |0,0|0|0,0,0| "
      LinkIsSingleOperatorLookup "False,False|False,False| |False,False| | |False|False|False,False|False,False|False| |False,False| |False,False|False|False|False|False,False| | | |False,False|False,False|False|False,False| |False,False|False|False,False| |False|False,False|False,False| |False,False| |False,False|False|False,False,False| "
      LinkIsSortSequential "False,False|False,False| |False,False| | |False|False|False,False|False,False|False| |False,False| |False,False|False|False|False|False,False| | | |False,False|False,False|False|False,False| |False,False|False|False,False| |False|False,False|False,False| |False,False| |False,False|False|False,False,False| "
      LinkSortMode "0,0|0,0| |0,0| | |0|0|0,0|0,0|0| |0,0| |0,0|0|0|0|0,0| | | |0,0|0,0|0|0,0| |0,0|0|0,0| |0|0,0|0,0| |0,0| |0,0|0|0,0,0| "
      LinkPartColMode "0,0|0,0| |0,0| | |0|0|0,0|0,0|0| |0,0| |0,0|0|0|0|0,0| | | |0,0|0,0|0|0,0| |0,0|0|0,0| |0|0,0|0,0| |0,0| |0,0|0|0,0,0| "
      LinkSourcePinIDs "V0S22P4,V0S22P6|V0S29P3,V0S29P5| |V0S33P3,V0S33P5| | |V1S0P3|V0S63P3|V0S71P2,V0S71P4|V0S72P2,V0S72P3|V0S76P6| |V0S81P1,V0S81P3| |V0S96P2,V0S96P3|V0S98P4|V0S100P3|V26S0P3|V26S2P2,V26S2P3| | | |V32S2P2,V32S2P4|V0S131P2,V0S131P3|V0S133P5|V0S139P2,V0S139P3| |V0S143P2,V0S143P3|V0S146P3|V0S174P1,V0S174P3| |V0S185P3|V0S213P2,V0S213P3|V0S221P2,V0S221P3| |V38S0P2,V38S0P3| |V38S2P2,V38S2P3|V38S3P6|V46S4P2,V46S4P3,V46S4P4| "
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S100"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "UnLock_SNS_Status"
      NextID "4"
      InputPins "V0S100P2"
      OutputPins "V0S100P3"
      JobType "0"
      ExecutionType "1"
      Jobname "UnLock_SNS_Status"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SNAPSHOT_DIMNSN_ID"
         Description "Param.WK_ID"
         ValueType "4"
         DisplayValue "Param.WK_ID"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Description "$FROM_EMAIL"
         ValueType "4"
         DisplayValue "$FROM_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Description "$TO_EMAIL"
         ValueType "4"
         DisplayValue "$TO_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Description "$SYS_CODE"
         ValueType "4"
         DisplayValue "$SYS_CODE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Description "$APP_NAME"
         ValueType "4"
         DisplayValue "$APP_NAME"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S100P2"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "unlock"
      Partner "V26S0|V26S0P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S100P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "unclok_success"
      Partner "V0S131|V0S131P1"
      ConditionType "0"
      LeftTextPos "1296"
      TopTextPos "744"
      SourceID "V0S100"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S131"
      OLEType "CJSCondition"
      Readonly "0"
      Name "IF_PUBLISH_DATE"
      NextID "4"
      InputPins "V0S131P1"
      OutputPins "V0S131P2|V0S131P3"
      ConditionType "0"
      StageType "CCondition"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S131P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "unclok_success"
      Partner "V0S100|V0S100P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S131P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "run_sns"
      Partner "V32S2|V32S2P1"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_PUBLISH_DATE_FLAG = \"Y\""
      LeftTextPos "1246"
      TopTextPos "788"
      SourceID "V0S29"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S131P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "skip_publish"
      Partner "V0S133|V0S133P1"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_PUBLISH_DATE_FLAG <> \"Y\""
      LeftTextPos "1143"
      TopTextPos "744"
      SourceID "V0S131"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S133"
      OLEType "CJSSequencer"
      Readonly "0"
      Name "seq_end"
      NextID "6"
      InputPins "V0S133P1|V0S133P2"
      OutputPins "V0S133P5"
      SequencerType "1"
      StageType "CSequencer"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S133P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "skip_publish"
      Partner "V0S131|V0S131P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S133P2"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "ok"
      Partner "V32S2|V32S2P4"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S133P5"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "TM1_END"
      Partner "V38S0|V38S0P4"
      ConditionType "0"
      LeftTextPos "965"
      TopTextPos "744"
      SourceID "V0S29"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S139"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Batch_Back_Del_SNS_Hist"
      NextID "6"
      InputPins "V0S139P4"
      OutputPins "V0S139P2|V0S139P3"
      JobType "0"
      ExecutionType "1"
      Jobname "Batch::Backup_Del_SNS_Hist"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Description "$TO_EMAIL"
         ValueType "4"
         DisplayValue "$TO_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Description "$FROM_EMAIL"
         ValueType "4"
         DisplayValue "$FROM_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Description "$APP_NAME"
         ValueType "4"
         DisplayValue "$APP_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Description "$SYS_CODE"
         ValueType "4"
         DisplayValue "$SYS_CODE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SNAPSHOT_WK_DIMNSN_ID"
         Description "SNAPSHOT_WK_DIMNSN_ID"
         ValueType "4"
         DisplayValue "SNAPSHOT_WK_DIMNSN_ID"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_IN_DIR"
         Description "$DSW_IN_DIR"
         ValueType "4"
         DisplayValue "$DSW_IN_DIR"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_SQL_DIR"
         Description "$DSW_SQL_DIR"
         ValueType "4"
         DisplayValue "$DSW_SQL_DIR"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S139P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "run_done"
      Partner "V0S146|V0S146P5"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "1425"
      TopTextPos "291"
      SourceID "V0S139"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S139P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "failure"
      Partner "V33S0|V33S0P1"
      ConditionType "6"
      TriggerExpression "Batch_Back_Del_SNS_Hist.$JobStatus <>\"1\""
      LeftTextPos "1392"
      TopTextPos "201"
      SourceID "V0S22"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S139P4"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "yes"
      Partner "V0S143|V0S143P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S143"
      OLEType "CJSCondition"
      Readonly "0"
      Name "if_run_archive"
      NextID "7"
      InputPins "V0S143P6"
      OutputPins "V0S143P2|V0S143P3"
      ConditionType "0"
      StageType "CCondition"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S143P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "yes"
      Partner "V0S139|V0S139P4"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_INTERMEDIATE_WEEK_FLAG ='Y'"
      LeftTextPos "1340"
      TopTextPos "340"
      SourceID "V0S143"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S143P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "no"
      Partner "V0S146|V0S146P2"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_INTERMEDIATE_WEEK_FLAG ='N'"
      LeftTextPos "1376"
      TopTextPos "384"
      SourceID "V0S143"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S143P6"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "backup"
      Partner "V0S185|V0S185P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S146"
      OLEType "CJSSequencer"
      Readonly "0"
      Name "done"
      NextID "6"
      InputPins "V0S146P2|V0S146P5"
      OutputPins "V0S146P3"
      SequencerType "1"
      StageType "CSequencer"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S146P2"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "no"
      Partner "V0S143|V0S143P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S146P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "to_sns"
      Partner "V0S71|V0S71P6"
      ConditionType "0"
      LeftTextPos "1513"
      TopTextPos "384"
      SourceID "V0S146"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S146P5"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "run_done"
      Partner "V0S139|V0S139P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S174"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Load_VRR_Expird_Renwd"
      NextID "6"
      InputPins "V0S174P5"
      OutputPins "V0S174P1|V0S174P3"
      JobType "0"
      ExecutionType "1"
      Jobname "Batch::Load_VRR_Expird_Renwd"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SNAPSHOT_WK_DIMNSN_ID"
         Description "SNAPSHOT_WK_DIMNSN_ID"
         ValueType "4"
         DisplayValue "SNAPSHOT_WK_DIMNSN_ID"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "REFRESH_FLAG"
         Description "\"N\""
         ValueType "4"
         DisplayValue "\"N\""
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_ASP_FLAG"
         Description "Init_Flag.V_RUN_VRR_ASP_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_VRR_ASP_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_VRR_EXPIRED_FLAG"
         Description "Init_Flag.V_RUN_VRR_EXPIRED_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_VRR_EXPIRED_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_VRR_RENEWD_FLAG"
         Description "Init_Flag.V_RUN_VRR_RENEWED_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_VRR_RENEWED_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Description "$FROM_EMAIL"
         ValueType "4"
         DisplayValue "$FROM_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Description "$TO_EMAIL"
         ValueType "4"
         DisplayValue "$TO_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Description "$SYS_CODE"
         ValueType "4"
         DisplayValue "$SYS_CODE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Description "$APP_NAME"
         ValueType "4"
         DisplayValue "$APP_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$HRCL_NAME"
         Description "$HRCL_NAME"
         ValueType "4"
         DisplayValue "$HRCL_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "LOAD_TOKEN_MULTI_YR_FLAG"
         Description "'N'"
         ValueType "4"
         DisplayValue "'N'"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S174P1"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "VRR_C"
      Partner "V0S185|V0S185P2"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "1070"
      TopTextPos "425"
      SourceID "V0S143"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S174P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "failure"
      Partner "V35S0|V35S0P1"
      ConditionType "6"
      TriggerExpression "Load_VRR_Expird_Renwd.$JobStatus<>\"1\""
      LeftTextPos "984"
      TopTextPos "521"
      SourceID "V0S155"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S174P5"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "vrr"
      Partner "V46S4|V46S4P4"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S185"
      OLEType "CJSSequencer"
      Readonly "0"
      Name "RMS_VRR_Done"
      NextID "4"
      InputPins "V0S185P1|V0S185P2"
      OutputPins "V0S185P3"
      SequencerType "0"
      StageType "CSequencer"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S185P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "RMS_C"
      Partner "V0S22|V0S22P6"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S185P2"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "VRR_C"
      Partner "V0S174|V0S174P1"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S185P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "backup"
      Partner "V0S143|V0S143P6"
      ConditionType "0"
      LeftTextPos "1156"
      TopTextPos "384"
      SourceID "V0S185"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S213"
      OLEType "CJSCondition"
      Readonly "0"
      Name "IF_RUN_TM1_FLAG"
      NextID "4"
      InputPins "V0S213P1"
      OutputPins "V0S213P2|V0S213P3"
      ConditionType "0"
      StageType "CCondition"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S213P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "notify_customer"
      Partner "V0S29|V0S29P5"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S213P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "YES"
      Partner "V0S96|V0S96P6"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_RUN_TM1_FLAG ='Y'"
      LeftTextPos "2265"
      TopTextPos "444"
      SourceID "V0S213"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S213P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "No"
      Partner "V0S76|V0S76P10"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_RUN_TM1_FLAG <>'Y'"
      LeftTextPos "2192"
      TopTextPos "413"
      SourceID "V0S213"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S22"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Batch_RMS_Process"
      NextID "8"
      InputPins "V0S22P7"
      OutputPins "V0S22P4|V0S22P6"
      JobType "0"
      ExecutionType "1"
      Jobname "Batch::RMS_Process"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_NAME"
         Description "$ODS_DB_NAME"
         ValueType "4"
         DisplayValue "$ODS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_USERNAME"
         Description "$ODS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$ODS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_PASSWD"
         Description "$ODS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$ODS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Description "$FROM_EMAIL"
         ValueType "4"
         DisplayValue "$FROM_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Description "$TO_EMAIL"
         ValueType "4"
         DisplayValue "$TO_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Description "$SYS_CODE"
         ValueType "4"
         DisplayValue "$SYS_CODE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Description "$APP_NAME"
         ValueType "4"
         DisplayValue "$APP_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_IN_DIR"
         Description "$DSW_IN_DIR"
         ValueType "4"
         DisplayValue "$DSW_IN_DIR"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_SQL_DIR"
         Description "$DSW_SQL_DIR"
         ValueType "4"
         DisplayValue "$DSW_SQL_DIR"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_RMS_TAGT_FLAG"
         Description "Init_Flag.V_RUN_RMS_TRGT_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_RMS_TRGT_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_RMS_ACTL_FLAG"
         Description "Init_Flag.V_RUN_RMS_ACTL_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_RMS_ACTL_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DONE_SIGNAL_FILE_UC"
         Description "$DONE_SIGNAL_FILE_UC"
         ValueType "4"
         DisplayValue "$DONE_SIGNAL_FILE_UC"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DONE_SIGNAL_FILE_RMS"
         Description "$DONE_SIGNAL_FILE_RMS"
         ValueType "4"
         DisplayValue "$DONE_SIGNAL_FILE_RMS"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DB2_PRT_DIR"
         Description "$DB2_PRT_DIR"
         ValueType "4"
         DisplayValue "$DB2_PRT_DIR"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SKIP_COPY_TABLE"
         Description "SKIP_COPY_TABLE"
         ValueType "4"
         DisplayValue "SKIP_COPY_TABLE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "WAIT_FOR_UC_SIGNAL_FILE"
         Description "WAIT_FOR_UC_SIGNAL_FILE"
         ValueType "4"
         DisplayValue "WAIT_FOR_UC_SIGNAL_FILE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "LOAD_TOKEN_MULTI_YR_FLAG"
         Description "'N'"
         ValueType "4"
         DisplayValue "'N'"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S221"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Start_Mail"
      NextID "4"
      InputPins "V0S221P1"
      OutputPins "V0S221P2|V0S221P3"
      JobType "0"
      ExecutionType "1"
      Jobname "Batch::Master_Publish_Start"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "RUN_RMS_TRGT_FLAG"
         Description "Init_Flag.V_RUN_RMS_TRGT_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_RMS_TRGT_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_RMS_ACTL_FLAG"
         Description "Init_Flag.V_RUN_RMS_ACTL_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_RMS_ACTL_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_VRR_EXPIRED_FLAG"
         Description "Init_Flag.V_RUN_VRR_EXPIRED_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_VRR_EXPIRED_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_VRR_RENEWED_FLAG"
         Description "Init_Flag.V_RUN_VRR_RENEWED_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_VRR_RENEWED_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_VRR_ASP_FLAG"
         Description "Init_Flag.V_RUN_VRR_ASP_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_VRR_ASP_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_TM1_FLAG"
         Description "Init_Flag.V_RUN_TM1_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_TM1_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_SNS_DTL_SUM_FLAG"
         Description "Init_Flag.V_RUN_SNS_DTL_SUM_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_RUN_SNS_DTL_SUM_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "BUILD_SS_HISTORY_CUBE_FLAG"
         Description "Init_Flag.V_BUILD_SS_HISTORY_CUBE_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_BUILD_SS_HISTORY_CUBE_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SYNC_PROD_CUST_FLAG"
         Description "Init_Flag.V_SYNC_PROD_CUST_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_SYNC_PROD_CUST_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "ARCHIVE_INTERMEDIATE_WEEK_FLAG"
         Description "Init_Flag.V_INTERMEDIATE_WEEK_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_INTERMEDIATE_WEEK_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "PUBLISH_DATE_FLAG"
         Description "Init_Flag.V_PUBLISH_DATE_FLAG"
         ValueType "4"
         DisplayValue "Init_Flag.V_PUBLISH_DATE_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Description "$TO_EMAIL"
         ValueType "4"
         DisplayValue "$TO_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Description "$SYS_CODE"
         ValueType "4"
         DisplayValue "$SYS_CODE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Description "$APP_NAME"
         ValueType "4"
         DisplayValue "$APP_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Description "$FROM_EMAIL"
         ValueType "4"
         DisplayValue "$FROM_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_FLAG"
         Description "'Master'"
         ValueType "4"
         DisplayValue "'Master'"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "JOB_NAME"
         Description "Initialize_Param.V_JOB_NAME"
         ValueType "4"
         DisplayValue "Initialize_Param.V_JOB_NAME"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S221P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "check"
      Partner "V0S63|V0S63P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S221P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "lock"
      Partner "V0S98|V0S98P3"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "554"
      TopTextPos "384"
      SourceID "V27S0"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S221P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "failure"
      Partner "V37S0|V37S0P1"
      ConditionType "6"
      TriggerExpression "Start_Mail.$JobStatus <>\"1\""
      LeftTextPos "528"
      TopTextPos "482"
      SourceID "V0S22"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S22P4"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "failure"
      Partner "V0S31|V0S31P1"
      ConditionType "6"
      TriggerExpression "Batch_RMS_Process.$JobStatus <>\"1\""
      LeftTextPos "984"
      TopTextPos "250"
      SourceID "V0S22"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S22P6"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "RMS_C"
      Partner "V0S185|V0S185P1"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "1046"
      TopTextPos "311"
      SourceID "V0S22"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S22P7"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "rms"
      Partner "V46S4|V46S4P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S29"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Batch_SNS_PROCESS"
      NextID "8"
      InputPins "V0S29P4"
      OutputPins "V0S29P3|V0S29P5"
      JobType "0"
      ExecutionType "1"
      Jobname "Batch::SNS_Process"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_NAME"
         Description "$ODS_DB_NAME"
         ValueType "4"
         DisplayValue "$ODS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_USERNAME"
         Description "$ODS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$ODS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_PASSWD"
         Description "$ODS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$ODS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "DIMNSN_LIST"
         Description "DIMNSN_LIST"
         ValueType "4"
         DisplayValue "DIMNSN_LIST"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Description "$FROM_EMAIL"
         ValueType "4"
         DisplayValue "$FROM_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Description "$TO_EMAIL"
         ValueType "4"
         DisplayValue "$TO_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Description "$SYS_CODE"
         ValueType "4"
         DisplayValue "$SYS_CODE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Description "$APP_NAME"
         ValueType "4"
         DisplayValue "$APP_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "PPQ_CLOSE_MTH_DIMNSN_ID"
         Description "PPQ_CLOSE_MTH_DIMNSN_ID"
         ValueType "4"
         DisplayValue "PPQ_CLOSE_MTH_DIMNSN_ID"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "NQ_CLOSE_MTH_DIMNSN_ID"
         Description "NQ_CLOSE_MTH_DIMNSN_ID"
         ValueType "4"
         DisplayValue "NQ_CLOSE_MTH_DIMNSN_ID"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SNAPSHOT_WK_DIMNSN_ID"
         Description "SNAPSHOT_WK_DIMNSN_ID"
         ValueType "4"
         DisplayValue "SNAPSHOT_WK_DIMNSN_ID"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "WAIT_CUST_PROD_SIGNAL_FILE"
         Description "WAIT_CUST_PROD_SIGNAL_FILE"
         ValueType "4"
         DisplayValue "WAIT_CUST_PROD_SIGNAL_FILE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$HRCL_NAME"
         Description "$HRCL_NAME"
         ValueType "4"
         DisplayValue "$HRCL_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_SQL_DIR"
         Description "$DSW_SQL_DIR"
         ValueType "4"
         DisplayValue "$DSW_SQL_DIR"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_IN_DIR"
         Description "$DSW_IN_DIR"
         ValueType "4"
         DisplayValue "$DSW_IN_DIR"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DONE_SIGNAL_FILE_CUST"
         Description "$DONE_SIGNAL_FILE_CUST"
         ValueType "4"
         DisplayValue "$DONE_SIGNAL_FILE_CUST"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DONE_SIGNAL_FILE_PROD"
         Description "$DONE_SIGNAL_FILE_PROD"
         ValueType "4"
         DisplayValue "$DONE_SIGNAL_FILE_PROD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SNS_VALIDATE_SQL_FILE"
         Description "SNS_SQL_File"
         ValueType "4"
         DisplayValue "SNS_SQL_File"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S29P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "failure"
      Partner "V0S37|V0S37P1"
      ConditionType "6"
      TriggerExpression "Batch_SNS_PROCESS.$JobStatus <>\"1\""
      LeftTextPos "2040"
      TopTextPos "280"
      SourceID "V0S29"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S29P4"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "YES"
      Partner "V0S72|V0S72P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S29P5"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "notify_customer"
      Partner "V0S213|V0S213P1"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "2153"
      TopTextPos "384"
      SourceID "V0S29"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S31"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "RMS_failure"
      NextID "2"
      InputPins "V0S31P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Batch_RMS_Process.$JobName# failed with status code = #Batch_RMS_Process.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S31P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "failure"
      Partner "V0S22|V0S22P4"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S33"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Batch_Sync_Prod_dimnsn"
      NextID "6"
      InputPins "V0S33P4"
      OutputPins "V0S33P3|V0S33P5"
      JobType "0"
      ExecutionType "1"
      Jobname "Batch::Sync_Prod_Cust_Dimnsn"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_NAME"
         Description "$ODS_DB_NAME"
         ValueType "4"
         DisplayValue "$ODS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_USERNAME"
         Description "$ODS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$ODS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$ODS_DB_PASSWD"
         Description "$ODS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$ODS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SNS_VALIDATE_SQL_FILE"
         Description "SNS_SQL_File"
         ValueType "4"
         DisplayValue "SNS_SQL_File"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Description "$FROM_EMAIL"
         ValueType "4"
         DisplayValue "$FROM_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Description "$TO_EMAIL"
         ValueType "4"
         DisplayValue "$TO_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Description "$APP_NAME"
         ValueType "4"
         DisplayValue "$APP_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Description "$SYS_CODE"
         ValueType "4"
         DisplayValue "$SYS_CODE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$HRCL_NAME"
         Description "$HRCL_NAME"
         ValueType "4"
         DisplayValue "$HRCL_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "WAIT_CUST_PROD_SIGNAL_FILE"
         Description "WAIT_CUST_PROD_SIGNAL_FILE"
         ValueType "4"
         DisplayValue "WAIT_CUST_PROD_SIGNAL_FILE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DONE_SIGNAL_FILE_CUST"
         Description "$DONE_SIGNAL_FILE_CUST"
         ValueType "4"
         DisplayValue "$DONE_SIGNAL_FILE_CUST"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DONE_SIGNAL_FILE_PROD"
         Description "$DONE_SIGNAL_FILE_PROD"
         ValueType "4"
         DisplayValue "$DONE_SIGNAL_FILE_PROD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$COGNOS_ACCOUNT_NAME"
         Description "$COGNOS_ACCOUNT_NAME"
         ValueType "4"
         DisplayValue "$COGNOS_ACCOUNT_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$COGNOS_SERVER_NAME_SS"
         Description "$COGNOS_SERVER_NAME_SS"
         ValueType "4"
         DisplayValue "$COGNOS_SERVER_NAME_SS"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_IN_DIR"
         Description "$DSW_IN_DIR"
         ValueType "4"
         DisplayValue "$DSW_IN_DIR"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_SQL_DIR"
         Description "$DSW_SQL_DIR"
         ValueType "4"
         DisplayValue "$DSW_SQL_DIR"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "NQ_CLOSE_MTH_DIMNSN_ID"
         Description "NQ_CLOSE_MTH_DIMNSN_ID"
         ValueType "4"
         DisplayValue "NQ_CLOSE_MTH_DIMNSN_ID"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "PPQ_CLOSE_MTH_DIMNSN_ID"
         Description "PPQ_CLOSE_MTH_DIMNSN_ID"
         ValueType "4"
         DisplayValue "PPQ_CLOSE_MTH_DIMNSN_ID"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SNAPSHOT_WK_DIMNSN_ID"
         Description "SNAPSHOT_WK_DIMNSN_ID"
         ValueType "4"
         DisplayValue "SNAPSHOT_WK_DIMNSN_ID"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SKIP_BUILD_CUBE"
         Description "SKIP_BUILD_CUBE"
         ValueType "4"
         DisplayValue "SKIP_BUILD_CUBE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "SKIP_COPY_TABLE"
         Description "SKIP_COPY_TABLE"
         ValueType "4"
         DisplayValue "SKIP_COPY_TABLE"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S33P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "failure"
      Partner "V0S38|V0S38P1"
      ConditionType "6"
      TriggerExpression "Batch_Sync_Prod_dimnsn.$JobStatus <>\"1\""
      LeftTextPos "1539"
      TopTextPos "538"
      SourceID "V0S33"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S33P4"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "YES"
      Partner "V0S71|V0S71P4"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S33P5"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "sysnc_success"
      Partner "V0S76|V0S76P2"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "1764"
      TopTextPos "552"
      SourceID "V0S33"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S37"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "Batch_SNS_PROCESS_failure"
      NextID "2"
      InputPins "V0S37P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Batch_SNS_PROCESS.$JobName# failed with status code = #Batch_SNS_PROCESS.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S37P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "failure"
      Partner "V0S29|V0S29P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S38"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "Batch_Sync_Prod_dimnsn_failure"
      NextID "2"
      InputPins "V0S38P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Batch_Sync_Prod_dimnsn.$JobName# failed with status code = #Batch_Sync_Prod_dimnsn.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S38P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "failure"
      Partner "V0S33|V0S33P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S63"
      OLEType "CJSUserVarsActivity"
      Readonly "0"
      Name "Init_Flag"
      NextID "4"
      InputPins "V0S63P2"
      OutputPins "V0S63P3"
      Variables "CParamValues"
      BEGIN DSSUBRECORD
         Name "V_RUN_RMS_TRGT_FLAG"
         Description "if RUN_RMS_TRGT_FLAG='DEFAULT' then UtilityHashLookup('sns_run_flag_hash', 'RUN_RMS_TRGT_FLAG', 1) else RUN_RMS_TRGT_FLAG"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_RUN_RMS_ACTL_FLAG"
         Description "if RUN_RMS_ACTL_FLAG='DEFAULT' then UtilityHashLookup('sns_run_flag_hash', 'RUN_RMS_ACTL_FLAG', 1) else RUN_RMS_ACTL_FLAG"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_SYNC_PROD_CUST_FLAG"
         Description "if SYNC_PROD_CUST_FLAG='DEFAULT' then UtilityHashLookup('sns_run_flag_hash', 'SYN_PRD_CUST_FLAG', 1) else SYNC_PROD_CUST_FLAG"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_RUN_SNS_DTL_SUM_FLAG"
         Description "if RUN_SNS_DTL_SUM_FLAG='DEFAULT' then UtilityHashLookup('sns_run_flag_hash', 'RUN_SNS_DTL_SUM_FLAG', 1) else RUN_SNS_DTL_SUM_FLAG"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_PUBLISH_DATE_FLAG"
         Description "if PUBLISH_DATE_FLAG='DEFAULT' then UtilityHashLookup('sns_run_flag_hash', 'PUBLISH_DATE_FLAG', 1) else PUBLISH_DATE_FLAG"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_INTERMEDIATE_WEEK_FLAG"
         Description "if ARCHIVE_INTERMEDIATE_WEEK_FLAG='DEFAULT' then UtilityHashLookup('sns_run_flag_hash', 'ARCHIVE_INTERMEDIATE_WEEK_FLAG', 1) else ARCHIVE_INTERMEDIATE_WEEK_FLAG"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_RUN_VRR_EXPIRED_FLAG"
         Description "if RUN_VRR_EXPIRED_FLAG='DEFAULT' then UtilityHashLookup('sns_run_flag_hash', 'RUN_VRR_EXPIRED_FLAG', 1) else RUN_VRR_EXPIRED_FLAG"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_RUN_VRR_RENEWED_FLAG"
         Description "if RUN_VRR_RENEWED_FLAG='DEFAULT' then UtilityHashLookup('sns_run_flag_hash', 'RUN_VRR_RENEWED_FLAG', 1) else RUN_VRR_RENEWED_FLAG"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_RUN_VRR_ASP_FLAG"
         Description "if RUN_VRR_ASP_FLAG='DEFAULT' then UtilityHashLookup('sns_run_flag_hash', 'RUN_VRR_ASP_FLAG', 1) else RUN_VRR_ASP_FLAG"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_RUN_TM1_FLAG"
         Description "if RUN_TM1_FLAG='DEFAULT' then UtilityHashLookup('sns_run_flag_hash', 'RUN_TM1_FLAG', 1) else RUN_TM1_FLAG"
         ValueType "0"
      END DSSUBRECORD
      StageType "CUserVarsActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S63P2"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "to_init_para"
      Partner "V0S81|V0S81P1"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S63P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "check"
      Partner "V0S221|V0S221P1"
      ConditionType "0"
      LeftTextPos "464"
      TopTextPos "384"
      SourceID "V0S63"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S71"
      OLEType "CJSCondition"
      Readonly "0"
      Name "IF_SYSNC_CUST_PROD"
      NextID "7"
      InputPins "V0S71P6"
      OutputPins "V0S71P2|V0S71P4"
      ConditionType "0"
      StageType "CCondition"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S71P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "NO"
      Partner "V0S72|V0S72P1"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_SYNC_PROD_CUST_FLAG='N'"
      LeftTextPos "1727"
      TopTextPos "384"
      SourceID "V0S71"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S71P4"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "YES"
      Partner "V0S33|V0S33P4"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_SYNC_PROD_CUST_FLAG='Y'"
      LeftTextPos "1680"
      TopTextPos "464"
      SourceID "V0S71"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S71P6"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "to_sns"
      Partner "V0S146|V0S146P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S72"
      OLEType "CJSCondition"
      Readonly "0"
      Name "IF_RUN_SNS_PROCESS"
      NextID "4"
      InputPins "V0S72P1"
      OutputPins "V0S72P2|V0S72P3"
      ConditionType "0"
      StageType "CCondition"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S72P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "NO"
      Partner "V0S71|V0S71P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S72P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "YES"
      Partner "V0S29|V0S29P4"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_RUN_SNS_DTL_SUM_FLAG='Y'"
      LeftTextPos "1897"
      TopTextPos "369"
      SourceID "V0S71"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S72P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "NO_SYSNC"
      Partner "V0S76|V0S76P4"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_RUN_SNS_DTL_SUM_FLAG='N'"
      LeftTextPos "1872"
      TopTextPos "424"
      SourceID "V0S72"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S76"
      OLEType "CJSSequencer"
      Readonly "0"
      Name "all_done"
      NextID "11"
      InputPins "V0S76P2|V0S76P4|V0S76P9|V0S76P10"
      OutputPins "V0S76P6"
      SequencerType "1"
      StageType "CSequencer"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S76P10"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "No"
      Partner "V0S213|V0S213P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S76P2"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "sysnc_success"
      Partner "V0S33|V0S33P5"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S76P4"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "NO_SYSNC"
      Partner "V0S72|V0S72P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S76P6"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "to_wk_id"
      Partner "V26S2|V26S2P1"
      ConditionType "0"
      LeftTextPos "1872"
      TopTextPos "616"
      SourceID "V0S42"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S76P9"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "SNS_SUCCESS"
      Partner "V0S96|V0S96P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S81"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Gen_Run_Flag_hash"
      NextID "6"
      InputPins "V0S81P5"
      OutputPins "V0S81P1|V0S81P3"
      JobType "0"
      ExecutionType "1"
      Jobname "Gen_Run_Flag_hash"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S81P1"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "to_init_para"
      Partner "V0S63|V0S63P2"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "299"
      TopTextPos "332"
      SourceID "V0S58"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S81P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "failure"
      Partner "V23S0|V23S0P1"
      ConditionType "6"
      TriggerExpression "Gen_Run_Flag_hash.$JobStatus <>\"1\""
      LeftTextPos "384"
      TopTextPos "240"
      SourceID "V0S3"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S81P5"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "to_init_flg"
      Partner "V1S0|V1S0P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S96"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Batch_Wait_For_TM1_Cube"
      NextID "7"
      InputPins "V0S96P6"
      OutputPins "V0S96P2|V0S96P3"
      JobType "0"
      ExecutionType "1"
      Jobname "Batch::Wait_For_TM1_Cube"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Description "$SYS_CODE"
         ValueType "4"
         DisplayValue "$SYS_CODE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Description "$APP_NAME"
         ValueType "4"
         DisplayValue "$APP_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Description "$TO_EMAIL"
         ValueType "4"
         DisplayValue "$TO_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Description "$FROM_EMAIL"
         ValueType "4"
         DisplayValue "$FROM_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL_SNS_CUSTOMER"
         Description "$TO_EMAIL_SNS_CUSTOMER"
         ValueType "4"
         DisplayValue "$TO_EMAIL_SNS_CUSTOMER"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_IN_DIR"
         Description "$DSW_IN_DIR"
         ValueType "4"
         DisplayValue "$DSW_IN_DIR"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "NOTIFY_CUSTOMER_FLAG"
         Description "NOTIFY_CUSTOMER_FLAG"
         ValueType "4"
         DisplayValue "NOTIFY_CUSTOMER_FLAG"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_TM1_FLAG"
         Description "RUN_TM1_FLAG"
         ValueType "4"
         DisplayValue "RUN_TM1_FLAG"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S96P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "SNS_SUCCESS"
      Partner "V0S76|V0S76P9"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "1896"
      TopTextPos "552"
      SourceID "V0S29"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S96P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "failure"
      Partner "V28S0|V28S0P1"
      ConditionType "6"
      TriggerExpression "Batch_Wait_For_TM1_Cube.$JobStatus <>\"1\""
      LeftTextPos "2315"
      TopTextPos "552"
      SourceID "V0S29"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S96P6"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "YES"
      Partner "V0S213|V0S213P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S98"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Lock_SNS_Status"
      NextID "5"
      InputPins "V0S98P3"
      OutputPins "V0S98P4"
      JobType "0"
      ExecutionType "1"
      Jobname "Lock_SNS_Status"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "ACTION"
         Description "\"POPULATE\""
         ValueType "4"
         DisplayValue "\"POPULATE\""
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "COMMENT"
         Description =+=+=+=
IF COMMENT <> 'DEFAULT' THEN COMMENT
ELSE "Run " 
: (IF Init_Flag.V_RUN_RMS_TRGT_FLAG = "Y" THEN "RMS Target;" ELSE "")
: (IF Init_Flag.V_RUN_RMS_ACTL_FLAG = "Y" THEN "RMS Actual;" ELSE "")
: (IF Init_Flag.V_RUN_SNS_DTL_SUM_FLAG = "Y" THEN "SNS Sum/Dtl;" ELSE "")
: (IF Init_Flag.V_SYNC_PROD_CUST_FLAG = "Y" THEN "Sync Prod and Cust Dimension;" ELSE "")
: (IF Init_Flag.V_INTERMEDIATE_WEEK_FLAG = "Y" THEN "Remove intermediate week data;" ELSE "")
: (IF Init_Flag.V_RUN_VRR_EXPIRED_FLAG = "Y" THEN "VRR Expired;" ELSE "")
: (IF Init_Flag.V_RUN_VRR_RENEWED_FLAG = "Y" THEN "VRR Renewed;" ELSE "")
: (IF Init_Flag.V_RUN_VRR_ASP_FLAG = "Y" THEN "VRR ASP;" ELSE "")

=+=+=+=
         ValueType "4"
         DisplayValue =+=+=+=
IF COMMENT <> 'DEFAULT' THEN COMMENT
ELSE "Run " 
: (IF Init_Flag.V_RUN_RMS_TRGT_FLAG = "Y" THEN "RMS Target;" ELSE "")
: (IF Init_Flag.V_RUN_RMS_ACTL_FLAG = "Y" THEN "RMS Actual;" ELSE "")
: (IF Init_Flag.V_RUN_SNS_DTL_SUM_FLAG = "Y" THEN "SNS Sum/Dtl;" ELSE "")
: (IF Init_Flag.V_SYNC_PROD_CUST_FLAG = "Y" THEN "Sync Prod and Cust Dimension;" ELSE "")
: (IF Init_Flag.V_INTERMEDIATE_WEEK_FLAG = "Y" THEN "Remove intermediate week data;" ELSE "")
: (IF Init_Flag.V_RUN_VRR_EXPIRED_FLAG = "Y" THEN "VRR Expired;" ELSE "")
: (IF Init_Flag.V_RUN_VRR_RENEWED_FLAG = "Y" THEN "VRR Renewed;" ELSE "")
: (IF Init_Flag.V_RUN_VRR_ASP_FLAG = "Y" THEN "VRR ASP;" ELSE "")

=+=+=+=
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Description "$FROM_EMAIL"
         ValueType "4"
         DisplayValue "$FROM_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Description "$TO_EMAIL"
         ValueType "4"
         DisplayValue "$TO_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Description "$SYS_CODE"
         ValueType "4"
         DisplayValue "$SYS_CODE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Description "$APP_NAME"
         ValueType "4"
         DisplayValue "$APP_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "IGNORE_STATUS"
         Description "IGNORE_STATUS"
         ValueType "4"
         DisplayValue "IGNORE_STATUS"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S98P3"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "lock"
      Partner "V0S221|V0S221P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V0S98P4"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "token_load"
      Partner "V46S4|V46S4P5"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "726"
      TopTextPos "384"
      SourceID "V0S98"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V1S0"
      OLEType "CJSUserVarsActivity"
      Readonly "0"
      Name "Initialize_Param"
      NextID "4"
      OutputPins "V1S0P3"
      Variables "CParamValues"
      BEGIN DSSUBRECORD
         Name "V_HOST_NAME"
         Description "DSHostName"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_JOB_NAME"
         Description "DSJobName"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_PROJ_NAME"
         Description "DSProjectName"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "0"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "V_SQL_FILE"
         Description "\"ytd_validation.sqls\""
         ValueType "0"
      END DSSUBRECORD
      StageType "CUserVarsActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V1S0P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "to_init_flg"
      Partner "V0S81|V0S81P5"
      ConditionType "0"
      LeftTextPos "360"
      TopTextPos "151"
      SourceID "V0S58"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V22S0"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "Batch_successful"
      NextID "5"
      InputPins "V22S0P4"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#S#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Initialize_Param.V_JOB_NAME# completed successfully"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V22S0P4"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "end"
      Partner "V38S3|V38S3P6"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V23S0"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "notify_Gen_Run_Flag_hash_failure"
      NextID "2"
      InputPins "V23S0P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Gen_Run_Flag_hash.$JobName# failed with status code = #Gen_Run_Flag_hash.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V23S0P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "failure"
      Partner "V0S81|V0S81P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V26S0"
      OLEType "CJSUserVarsActivity"
      Readonly "0"
      Name "Param"
      NextID "4"
      InputPins "V26S0P1"
      OutputPins "V26S0P3"
      Variables "CParamValues"
      BEGIN DSSUBRECORD
         Name "WK_ID"
         Description "if SNAPSHOT_WK_DIMNSN_ID='DEFAULT'  then UtilityHashLookup('hash_fiscal_weekid_from_table', 'key', 1)  else SNAPSHOT_WK_DIMNSN_ID"
         ValueType "0"
      END DSSUBRECORD
      StageType "CUserVarsActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V26S0P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "to_init"
      Partner "V26S2|V26S2P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V26S0P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "unlock"
      Partner "V0S100|V0S100P2"
      ConditionType "0"
      LeftTextPos "1578"
      TopTextPos "744"
      SourceID "V0S76"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V26S2"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "GenFiscalDate2WeekID"
      NextID "4"
      InputPins "V26S2P1"
      OutputPins "V26S2P2|V26S2P3"
      JobType "0"
      ExecutionType "1"
      Jobname "Gen_Fiscal_Week_ID_From_Week_Table"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V26S2P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "to_wk_id"
      Partner "V0S76|V0S76P6"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V26S2P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "to_init"
      Partner "V26S0|V26S0P1"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "1738"
      TopTextPos "744"
      SourceID "V0S51"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V26S2P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "failure"
      Partner "V26S4|V26S4P1"
      ConditionType "6"
      TriggerExpression "GenFiscalDate2WeekID.$JobStatus <>\"1\""
      LeftTextPos "1872"
      TopTextPos "823"
      SourceID "V0S3"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V26S4"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "GenFiscalDate2WeekID_failure"
      NextID "2"
      InputPins "V26S4P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #GenFiscalDate2WeekID.$JobName# failed with status code = #GenFiscalDate2WeekID.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V26S4P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "failure"
      Partner "V26S2|V26S2P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V28S0"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "Notify_failure"
      NextID "2"
      InputPins "V28S0P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Batch_Wait_For_TM1_Cube.$JobName# failed with status code = #Batch_Wait_For_TM1_Cube.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V28S0P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "failure"
      Partner "V0S96|V0S96P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V32S1"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "Batch_Publish_SNS_Data_failure"
      NextID "2"
      InputPins "V32S1P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Batch_Publish_SNS_Data.$JobName# failed with status code = #Batch_Publish_SNS_Data.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V32S1P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "failure"
      Partner "V32S2|V32S2P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V32S2"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Batch_Publish_SNS_Data"
      NextID "5"
      InputPins "V32S2P1"
      OutputPins "V32S2P2|V32S2P4"
      JobType "0"
      ExecutionType "1"
      Jobname "Batch::Publish_SNS_Data"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Description "$FROM_EMAIL"
         ValueType "4"
         DisplayValue "$FROM_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Description "$TO_EMAIL"
         ValueType "4"
         DisplayValue "$TO_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Description "$APP_NAME"
         ValueType "4"
         DisplayValue "$APP_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Description "$SYS_CODE"
         ValueType "4"
         DisplayValue "$SYS_CODE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL_SNS_CUSTOMER"
         Description "$TO_EMAIL_SNS_CUSTOMER"
         ValueType "4"
         DisplayValue "$TO_EMAIL_SNS_CUSTOMER"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "RUN_BACKUP_PRIOR_WEEK_FLAG"
         Description "RUN_BACKUP_PRIOR_WEEK_FLAG"
         ValueType "4"
         DisplayValue "RUN_BACKUP_PRIOR_WEEK_FLAG"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V32S2P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "run_sns"
      Partner "V0S131|V0S131P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V32S2P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "failure"
      Partner "V32S1|V32S1P1"
      ConditionType "6"
      TriggerExpression "Batch_Publish_SNS_Data.$JobStatus <> \"1\""
      LeftTextPos "1176"
      TopTextPos "906"
      SourceID "V0S29"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V32S2P4"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "ok"
      Partner "V0S133|V0S133P2"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "1130"
      TopTextPos "784"
      SourceID "V32S2"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V33S0"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "bak_del_hist_failure"
      NextID "2"
      InputPins "V33S0P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Batch_RMS_Process.$JobName# failed with status code = #Batch_RMS_Process.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V33S0P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "failure"
      Partner "V0S139|V0S139P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V35S0"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "vrr_failed"
      NextID "2"
      InputPins "V35S0P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Load_VRR_Expird_Renwd.$JobName# failed with status code = #Load_VRR_Expird_Renwd.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V35S0P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "failure"
      Partner "V0S174|V0S174P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V37S0"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "Start_Mail_failure"
      NextID "2"
      InputPins "V37S0P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Start_Mail.$JobName# failed with status code = #Start_Mail.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V37S0P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "failure"
      Partner "V0S221|V0S221P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S0"
      OLEType "CJSCondition"
      Readonly "0"
      Name "RUN_TM1_END_FLAG"
      NextID "5"
      InputPins "V38S0P4"
      OutputPins "V38S0P2|V38S0P3"
      ConditionType "0"
      StageType "CCondition"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S0P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "YES"
      Partner "V38S2|V38S2P1"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_RUN_TM1_FLAG ='E'"
      LeftTextPos "915"
      TopTextPos "786"
      SourceID "V0S213"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S0P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "No"
      Partner "V38S3|V38S3P4"
      ConditionType "6"
      TriggerExpression "Init_Flag.V_RUN_TM1_FLAG <>'E'"
      LeftTextPos "780"
      TopTextPos "744"
      SourceID "V0S213"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S0P4"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "TM1_END"
      Partner "V0S133|V0S133P5"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S1"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "TM1_failure"
      NextID "2"
      InputPins "V38S1P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Batch_Wait_For_TM1_Cube_END.$JobName# failed with status code = #Batch_Wait_For_TM1_Cube_END.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S1P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "failure"
      Partner "V38S2|V38S2P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S2"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Batch_Wait_For_TM1_Cube_END"
      NextID "4"
      InputPins "V38S2P1"
      OutputPins "V38S2P2|V38S2P3"
      JobType "0"
      ExecutionType "1"
      Jobname "Batch::Wait_For_TM1_Cube"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$SYS_CODE"
         Description "$SYS_CODE"
         ValueType "4"
         DisplayValue "$SYS_CODE"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$APP_NAME"
         Description "$APP_NAME"
         ValueType "4"
         DisplayValue "$APP_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL"
         Description "$TO_EMAIL"
         ValueType "4"
         DisplayValue "$TO_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$FROM_EMAIL"
         Description "$FROM_EMAIL"
         ValueType "4"
         DisplayValue "$FROM_EMAIL"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$TO_EMAIL_SNS_CUSTOMER"
         Description "$TO_EMAIL_SNS_CUSTOMER"
         ValueType "4"
         DisplayValue "$TO_EMAIL_SNS_CUSTOMER"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSW_IN_DIR"
         Description "$DSW_IN_DIR"
         ValueType "4"
         DisplayValue "$DSW_IN_DIR"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "NOTIFY_CUSTOMER_FLAG"
         Description "'N'"
         ValueType "4"
         DisplayValue "'N'"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S2P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "YES"
      Partner "V38S0|V38S0P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S2P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "TM1_SUCCESS"
      Partner "V38S3|V38S3P3"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "763"
      TopTextPos "769"
      SourceID "V0S29"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S2P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "failure"
      Partner "V38S1|V38S1P1"
      ConditionType "6"
      TriggerExpression "Batch_Wait_For_TM1_Cube_END.$JobStatus <>\"1\""
      LeftTextPos "840"
      TopTextPos "924"
      SourceID "V0S29"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S3"
      OLEType "CJSSequencer"
      Readonly "0"
      Name "TM1_done"
      NextID "7"
      InputPins "V38S3P3|V38S3P4"
      OutputPins "V38S3P6"
      SequencerType "1"
      StageType "CSequencer"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S3P3"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "TM1_SUCCESS"
      Partner "V38S2|V38S2P2"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S3P4"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "No"
      Partner "V38S0|V38S0P3"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V38S3P6"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "end"
      Partner "V22S0|V22S0P4"
      ConditionType "0"
      LeftTextPos "566"
      TopTextPos "744"
      SourceID "V0S361"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V46S4"
      OLEType "CJSJobActivity"
      Readonly "0"
      Name "Populate_Token_Multi_Yr_Sns_Part"
      NextID "6"
      InputPins "V46S4P5"
      OutputPins "V46S4P2|V46S4P3|V46S4P4"
      JobType "0"
      ExecutionType "1"
      Jobname "Populate_Token_Multi_Yr_Sns_Part"
      ParameterValues "CParamValues"
      BEGIN DSSUBRECORD
         Name "$DSS_DB_NAME"
         Description "$DSS_DB_NAME"
         ValueType "4"
         DisplayValue "$DSS_DB_NAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_USERNAME"
         Description "$DSS_DB_USERNAME"
         ValueType "4"
         DisplayValue "$DSS_DB_USERNAME"
      END DSSUBRECORD
      BEGIN DSSUBRECORD
         Name "$DSS_DB_PASSWD"
         Description "$DSS_DB_PASSWD"
         ValueType "4"
         DisplayValue "$DSS_DB_PASSWD"
      END DSSUBRECORD
      CheckPoint "0"
      StageType "CJobActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V46S4P2"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "rms"
      Partner "V0S22|V0S22P7"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "899"
      TopTextPos "341"
      SourceID "V0S77"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V46S4P3"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "load_failure"
      Partner "V46S5|V46S5P1"
      ConditionType "6"
      TriggerExpression "Populate_Token_Multi_Yr_Sns_Part.$JobStatus <> \"1\""
      LeftTextPos "840"
      TopTextPos "484"
      SourceID "V0S4"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V46S4P4"
      OLEType "CJSActivityOutput"
      Readonly "0"
      Name "vrr"
      Partner "V0S174|V0S174P5"
      ConditionType "2"
      TriggerExpression "\"Executed OK\""
      LeftTextPos "876"
      TopTextPos "406"
      SourceID "V46S4"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V46S4P5"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "token_load"
      Partner "V0S98|V0S98P4"
      LinkType "1"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V46S5"
      OLEType "CJSMailActivity"
      Readonly "0"
      Name "load_failure"
      NextID "2"
      InputPins "V46S5P1"
      TransportType "0"
      Servername "#Initialize_Param.V_HOST_NAME#"
      RecipientAddress "#$TO_EMAIL#"
      SendersAddress "#$FROM_EMAIL#"
      Subject "#$SYS_CODE#F#$APP_NAME#-:#Initialize_Param.V_PROJ_NAME# on #Initialize_Param.V_HOST_NAME# - #Initialize_Param.V_DB_NAME#: job #Populate_Token_Multi_Yr_Sns_Part.$JobName# failed with status code = #Populate_Token_Multi_Yr_Sns_Part.$JobStatus#"
      IncludeJobReports "1"
      CheckPoint "0"
      StageType "CNotificationActivity"
   END DSRECORD
   BEGIN DSRECORD
      Identifier "V46S5P1"
      OLEType "CJSActivityInput"
      Readonly "0"
      Name "load_failure"
      Partner "V46S4|V46S4P3"
      LinkType "1"
   END DSRECORD
END DSJOB
